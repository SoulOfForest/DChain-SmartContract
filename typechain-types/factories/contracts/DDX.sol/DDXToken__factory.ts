/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  DDXToken,
  DDXTokenInterface,
} from "../../../contracts/DDX.sol/DDXToken";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [],
    name: "PRECISION",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burnFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "cap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "includeAddress",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "cap",
        type: "uint256",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "lockedBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "swapFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_includeAddress",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_status",
        type: "bool",
      },
    ],
    name: "updateIncludeAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_swapFee",
        type: "uint256",
      },
    ],
    name: "updateSwapFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506118cb806100206000396000f3fe608060405234801561001057600080fd5b50600436106101845760003560e01c8063715018a6116100d9578063a457c2d711610087578063a457c2d714610325578063a9059cbb14610338578063aaf5eb681461034b578063b119490e14610354578063bf16f65a14610367578063dd62ed3e1461037a578063f2fde38b1461038d57600080fd5b8063715018a61461029a57806379cc6790146102a25780638456cb59146102b55780638da5cb5b146102bd57806393995d4b146102d857806395d89b41146102fc5780639ae697bf1461030457600080fd5b80633f4ba83a116101365780633f4ba83a146102195780633fa4368d1461022357806340c10f191461023657806342966c681461024957806354cf2aeb1461025c5780635c975abb1461026657806370a082311461027157600080fd5b806306fdde0314610189578063095ea7b3146101a757806318160ddd146101ca57806323b872dd146101dc578063313ce567146101ef578063355274ea146101fe5780633950935114610206575b600080fd5b6101916103a0565b60405161019e9190611371565b60405180910390f35b6101ba6101b53660046113db565b610432565b604051901515815260200161019e565b6035545b60405190815260200161019e565b6101ba6101ea366004611405565b61044c565b6040516012815260200161019e565b6065546101ce565b6101ba6102143660046113db565b6104fa565b61022161051c565b005b610221610231366004611441565b61052e565b6102216102443660046113db565b6105c7565b61022161025736600461147d565b6105dd565b6101ce61012e5481565b60ca5460ff166101ba565b6101ce61027f366004611496565b6001600160a01b031660009081526033602052604090205490565b6102216105ea565b6102216102b03660046113db565b6105fc565b610221610611565b60fc546040516001600160a01b03909116815260200161019e565b6101ba6102e6366004611496565b6101316020526000908152604090205460ff1681565b610191610621565b6101ce610312366004611496565b6101306020526000908152604090205481565b6101ba6103333660046113db565b610630565b6101ba6103463660046113db565b6106b6565b6101ce61271081565b61022161036236600461155b565b61073f565b61022161037536600461147d565b610917565b6101ce6103883660046115c8565b610987565b61022161039b366004611496565b6109b2565b6060603680546103af906115fb565b80601f01602080910402602001604051908101604052809291908181526020018280546103db906115fb565b80156104285780601f106103fd57610100808354040283529160200191610428565b820191906000526020600020905b81548152906001019060200180831161040b57829003601f168201915b5050505050905090565b600033610440818585610a28565b60019150505b92915050565b600061012e5460000361047a5760405162461bcd60e51b815260040161047190611635565b60405180910390fd5b3360009081526101316020526040902054829060ff1615156001036104c25761271061012e54846104ab9190611682565b6104b591906116a1565b6104bf90846116c3565b90505b336104ce868286610b4d565b6104e38660006104de85886116c3565b610bc1565b6104ee868684610bc1565b50600195945050505050565b60003361044081858561050d8383610987565b61051791906116d6565b610a28565b610524610d65565b61052c610dbf565b565b610536610d65565b6001600160a01b03821661059b5760405162461bcd60e51b815260206004820152602660248201527f546f6b656e3a20416464726573732063616e206e6f74206265207a65726f206160448201526564647265737360d01b6064820152608401610471565b6001600160a01b0391909116600090815261013160205260409020805460ff1916911515919091179055565b6105cf610d65565b6105d98282610e11565b5050565b6105e73382610e50565b50565b6105f2610d65565b61052c6000610f7b565b610607823383610b4d565b6105d98282610e50565b610619610d65565b61052c610fcd565b6060603780546103af906115fb565b6000338161063e8286610987565b90508381101561069e5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610471565b6106ab8286868403610a28565b506001949350505050565b600061012e546000036106db5760405162461bcd60e51b815260040161047190611635565b3360009081526101316020526040902054829060ff1615156001036107235761271061012e548461070c9190611682565b61071691906116a1565b61072090846116c3565b90505b336107348160006104de85886116c3565b6106ab818684610bc1565b600054610100900460ff161580801561075f5750600054600160ff909116105b806107795750303b158015610779575060005460ff166001145b6107dc5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610471565b6000805460ff1916600117905580156107ff576000805461ff0019166101001790555b610809848461100a565b6108128261103b565b61081a61106b565b61082261109a565b6107d061012e556101316020527f3be64d8cbd6e2efb0b75975c6e7dc84b5431005cc836105ae26df888836c2f628054600160ff1991821681179092557f60e1b96ab363551a88bd3f4e3d25f9db131b74ed4cbace4879dbed5357ebe5e88054821683179055732d03c57c96ed8111545356c2d4288d1125c6e6d36000527f70e66ae5e0302471b34063af60784eab05863ffbc023eddb0955545777803437805490911690911790558015610911576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50505050565b61091f610d65565b61012c8111156109815760405162461bcd60e51b815260206004820152602760248201527f546f6b656e3a2053776170204665652063616e206e6f74206c6172676572207460448201526668616e2033302560c81b6064820152608401610471565b61012e55565b6001600160a01b03918216600090815260346020908152604080832093909416825291909152205490565b6109ba610d65565b6001600160a01b038116610a1f5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610471565b6105e781610f7b565b6001600160a01b038316610a8a5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610471565b6001600160a01b038216610aeb5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610471565b6001600160a01b0383811660008181526034602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6000610b598484610987565b905060001981146109115781811015610bb45760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610471565b6109118484848403610a28565b6001600160a01b038316610c255760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610471565b6001600160a01b038216610c875760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610471565b610c928383836110c9565b6001600160a01b03831660009081526033602052604090205481811015610d0a5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610471565b6001600160a01b03808516600081815260336020526040808220868603905592861680825290839020805486019055915160008051602061187683398151915290610d589086815260200190565b60405180910390a3610911565b60fc546001600160a01b0316331461052c5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610471565b610dc76110d1565b60ca805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b60655481610e1e60355490565b610e2891906116d6565b1115610e465760405162461bcd60e51b8152600401610471906116e9565b6105d9828261111a565b6001600160a01b038216610eb05760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610471565b610ebc826000836110c9565b6001600160a01b03821660009081526033602052604090205481811015610f305760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610471565b6001600160a01b03831660008181526033602090815260408083208686039055603580548790039055518581529192916000805160206118768339815191529101610b40565b505050565b60fc80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b610fd5611159565b60ca805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610df43390565b600054610100900460ff166110315760405162461bcd60e51b81526004016104719061171c565b6105d9828261119f565b600054610100900460ff166110625760405162461bcd60e51b81526004016104719061171c565b6105e7816111df565b600054610100900460ff166110925760405162461bcd60e51b81526004016104719061171c565b61052c611253565b600054610100900460ff166110c15760405162461bcd60e51b81526004016104719061171c565b61052c611283565b610f76611159565b60ca5460ff1661052c5760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606401610471565b6065548161112760355490565b61113191906116d6565b111561114f5760405162461bcd60e51b8152600401610471906116e9565b6105d982826112b6565b60ca5460ff161561052c5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610471565b600054610100900460ff166111c65760405162461bcd60e51b81526004016104719061171c565b60366111d283826117b5565b506037610f7682826117b5565b600054610100900460ff166112065760405162461bcd60e51b81526004016104719061171c565b6000811161124e5760405162461bcd60e51b8152602060048201526015602482015274045524332304361707065643a20636170206973203605c1b6044820152606401610471565b606555565b600054610100900460ff1661127a5760405162461bcd60e51b81526004016104719061171c565b61052c33610f7b565b600054610100900460ff166112aa5760405162461bcd60e51b81526004016104719061171c565b60ca805460ff19169055565b6001600160a01b03821661130c5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610471565b611318600083836110c9565b806035600082825461132a91906116d6565b90915550506001600160a01b038216600081815260336020908152604080832080548601905551848152600080516020611876833981519152910160405180910390a35050565b600060208083528351808285015260005b8181101561139e57858101830151858201604001528201611382565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b03811681146113d657600080fd5b919050565b600080604083850312156113ee57600080fd5b6113f7836113bf565b946020939093013593505050565b60008060006060848603121561141a57600080fd5b611423846113bf565b9250611431602085016113bf565b9150604084013590509250925092565b6000806040838503121561145457600080fd5b61145d836113bf565b91506020830135801515811461147257600080fd5b809150509250929050565b60006020828403121561148f57600080fd5b5035919050565b6000602082840312156114a857600080fd5b6114b1826113bf565b9392505050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126114df57600080fd5b813567ffffffffffffffff808211156114fa576114fa6114b8565b604051601f8301601f19908116603f01168101908282118183101715611522576115226114b8565b8160405283815286602085880101111561153b57600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060006060848603121561157057600080fd5b833567ffffffffffffffff8082111561158857600080fd5b611594878388016114ce565b945060208601359150808211156115aa57600080fd5b506115b7868287016114ce565b925050604084013590509250925092565b600080604083850312156115db57600080fd5b6115e4836113bf565b91506115f2602084016113bf565b90509250929050565b600181811c9082168061160f57607f821691505b60208210810361162f57634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252601f908201527f546f6b656e3a2073776170206665652063616e206e6f74206265207a65726f00604082015260600190565b634e487b7160e01b600052601160045260246000fd5b600081600019048311821515161561169c5761169c61166c565b500290565b6000826116be57634e487b7160e01b600052601260045260246000fd5b500490565b818103818111156104465761044661166c565b808201808211156104465761044661166c565b602080825260199082015278115490cc8c10d85c1c19590e8818d85c08195e18d959591959603a1b604082015260600190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b601f821115610f7657600081815260208120601f850160051c8101602086101561178e5750805b601f850160051c820191505b818110156117ad5782815560010161179a565b505050505050565b815167ffffffffffffffff8111156117cf576117cf6114b8565b6117e3816117dd84546115fb565b84611767565b602080601f83116001811461181857600084156118005750858301515b600019600386901b1c1916600185901b1785556117ad565b600085815260208120601f198616915b8281101561184757888601518255948401946001909101908401611828565b50858210156118655787850151600019600388901b60f8161c191681555b5050505050600190811b0190555056feddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa2646970667358221220a8b96484e2e3aabba8be15ff89896ede1d7e24c16f49f4a52086a40dfb1ce55c64736f6c63430008100033";

type DDXTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DDXTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DDXToken__factory extends ContractFactory {
  constructor(...args: DDXTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DDXToken> {
    return super.deploy(overrides || {}) as Promise<DDXToken>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): DDXToken {
    return super.attach(address) as DDXToken;
  }
  override connect(signer: Signer): DDXToken__factory {
    return super.connect(signer) as DDXToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DDXTokenInterface {
    return new utils.Interface(_abi) as DDXTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DDXToken {
    return new Contract(address, _abi, signerOrProvider) as DDXToken;
  }
}
