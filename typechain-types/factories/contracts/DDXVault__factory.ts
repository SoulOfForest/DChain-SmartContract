/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { DDXVault, DDXVaultInterface } from "../../contracts/DDXVault";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "previousAdminRole",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "newAdminRole",
        type: "bytes32",
      },
    ],
    name: "RoleAdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleGranted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleRevoked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [],
    name: "DDXStaking",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DEFAULT_ADMIN_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DWStaking",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "OWNER_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PAUSER_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SUB_ADMIN_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "__DChainBase_init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "admin",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "holder",
        type: "address",
      },
    ],
    name: "computeNextVestingScheduleIdForHolder",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "holder",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "computeVestingScheduleIdForAddressAndIndex",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
    ],
    name: "getRoleAdmin",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "vestingScheduleId",
        type: "bytes32",
      },
    ],
    name: "getVestingSchedule",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "beneficiary",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "cliff",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "start",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "duration",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "slicePeriodSeconds",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "revocable",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "amountTotal",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "released",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "revoked",
            type: "bool",
          },
        ],
        internalType: "struct DDXVault.VestingSchedule",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "holder",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "getVestingScheduleByAddressAndIndex",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "beneficiary",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "cliff",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "start",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "duration",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "slicePeriodSeconds",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "revocable",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "amountTotal",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "released",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "revoked",
            type: "bool",
          },
        ],
        internalType: "struct DDXVault.VestingSchedule",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "grantRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "hasRole",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "_rewardToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_treasury",
        type: "address",
      },
      {
        internalType: "address",
        name: "_DWStaking",
        type: "address",
      },
      {
        internalType: "address",
        name: "_DDXStaking",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_startVestingTime",
        type: "uint256",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "isAdmin",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "vestingScheduleIds",
        type: "bytes32[]",
      },
    ],
    name: "multipleRelease",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "vestingScheduleId",
        type: "bytes32",
      },
    ],
    name: "release",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "renounceRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "revokeRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardApplicable",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_beneficiary",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "rewardFromDWStaking",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_originAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_lockedAmount",
        type: "uint256",
      },
    ],
    name: "stakeWithVault",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "startVestingTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "toggleRewardApplicable",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "treasury",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "vestingDuration",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "vestingPeriodInSeconds",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50611ff5806100206000396000f3fe608060405234801561001057600080fd5b50600436106101b05760003560e01c80638af104da116100ef578063b6db75a011610092578063b6db75a0146103a5578063d547741f146103ad578063e58378bb146103c0578063e63ab1e9146103d5578063f51321d7146103ea578063f7c469f0146103fd578063f7c618c114610410578063f851a4401461042457600080fd5b80638af104da1461031f57806390b0b5f91461033257806391d148541461034557806395b6ef0c146103585780639ef346b41461036b578063a217fddf1461038b578063a83e8c8314610393578063ae5ff7851461039b57600080fd5b806361d027b31161015757806361d027b31461027357806362d6306f1461029f57806366088492146102b257806367d42a8b146102bc5780636a736cea146102cf5780637801d3a8146102e35780637b408a6b146102f75780638832e6721461030a57600080fd5b806301ffc9a7146101b5578063022f2354146101dd5780630713cb4e146102005780631514617e14610215578063248a9ca31461021f5780632f2ff15d1461024257806336568abe146102555780635c975abb14610268575b600080fd5b6101c86101c3366004611c7a565b610438565b60405190151581526020015b60405180910390f35b6101f2600080516020611fa083398151915281565b6040519081526020016101d4565b61021361020e366004611cba565b61046f565b005b6101f26101c45481565b6101f261022d366004611c33565b60009081526065602052604090206001015490565b610213610250366004611c4b565b610750565b610213610263366004611c4b565b61077a565b60975460ff166101c8565b6101c654610287906001600160a01b031681565b6040516001600160a01b0390911681526020016101d4565b6102136102ad366004611ae4565b6107f8565b6101f26101c35481565b6102136102ca366004611c33565b610924565b6101c954610287906001600160a01b031681565b6101c854610287906001600160a01b031681565b610213610305366004611b78565b610ad0565b6101ca546101c890600160a01b900460ff1681565b6101f261032d366004611b78565b610c15565b610213610340366004611ba3565b610c5c565b6101c8610353366004611c4b565b610cb9565b610213610366366004611b00565b610ce4565b61037e610379366004611c33565b610f15565b6040516101d49190611e00565b6101f2600081565b610213610fac565b6101f26101c55481565b6101c8611000565b6102136103bb366004611c4b565b61101f565b6101f2600080516020611f6083398151915281565b6101f2600080516020611f8083398151915281565b61037e6103f8366004611b78565b611044565b6101f261040b366004611ae4565b611060565b6101ca54610287906001600160a01b031681565b6101c754610287906001600160a01b031681565b60006001600160e01b03198216637965db0b60e01b148061046957506301ffc9a760e01b6001600160e01b03198316145b92915050565b6101c3544211156104dc5760405162461bcd60e51b815260206004820152602c60248201527f706f6f6c3a206e6f7420616c6c6f7720746f207374616b65206166746572207660448201526b195cdd1a5b99c81cdd185c9d60a21b60648201526084015b60405180910390fd5b3360006104ec6103798383610c15565b9050816001600160a01b031681600001516001600160a01b03161461055e5760405162461bcd60e51b815260206004820152602260248201527f706f6f6c3a2076657374696e67207363686564756c65206e6f74206578697374604482015261195960f21b60648201526084016104d3565b6101ca54604051636eb1769f60e11b81526001600160a01b0384811660048301523060248301528692169063dd62ed3e9060440160206040518083038186803b1580156105aa57600080fd5b505afa1580156105be573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105e29190611ca2565b10156106305760405162461bcd60e51b815260206004820152601a60248201527f706f6f6c3a20616c6c6f77616e6365206e6f7420656e6f75676800000000000060448201526064016104d3565b828160c0015110156106aa5760405162461bcd60e51b815260206004820152603f60248201527f706f6f6c3a2076657374696e67207363686564756c6520616d6f756e7420746f60448201527f74616c206e6f7420656e6f75676820746f20636f766572207374616b696e670060648201526084016104d3565b6101ca546101c95460405163095ea7b360e01b81526001600160a01b0391821660048201526024810187905291169063095ea7b390604401602060405180830381600087803b1580156106fc57600080fd5b505af1158015610710573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107349190611c13565b50828160c0018181516107479190611ed6565b90525050505050565b60008281526065602052604090206001015461076b81611085565b610775838361108f565b505050565b6001600160a01b03811633146107ea5760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b60648201526084016104d3565b6107f48282611115565b5050565b600054610100900460ff1661081f5760405162461bcd60e51b81526004016104d390611db5565b6001600160a01b0381166108755760405162461bcd60e51b815260206004820181905260248201527f4f776e65722063616e6e6f7420626520746865207a65726f206164647265737360448201526064016104d3565b61087d61117c565b6108856111a5565b61088d6111d4565b6108a5600080516020611f6083398151915282611203565b6108bd600080516020611f8083398151915282611203565b6108e3600080516020611fa0833981519152600080516020611f6083398151915261120d565b610909600080516020611f80833981519152600080516020611f6083398151915261120d565b610921600080516020611f608339815191528061120d565b50565b61092c611258565b6109346112b2565b60008181526101cd6020526040902060080154819060ff161561095657600080fd5b60008281526101cd6020526040902080546001600160a01b03163314806109f05760405162461bcd60e51b815260206004820152604260248201527f546f6b656e56657374696e673a206f6e6c792062656e6566696369617279206160448201527f6e64206f776e65722063616e2072656c656173652076657374656420746f6b656064820152616e7360f01b608482015260a4016104d3565b604080516101208101825283546001600160a01b03168152600184015460208201526002840154918101919091526003830154606082015260048301546080820152600583015460ff908116151560a0830152600684015460c0830152600784015460e08301526008840154161515610100820152600090610a71906112f8565b9050808360070154610a839190611e7f565b600784015582546101cb546001600160a01b0390911690610aa5908390611ed6565b6101cb556101ca54610ac1906001600160a01b031682846113c2565b5050505050610921600160c955565b6101c9546001600160a01b03163314610b375760405162461bcd60e51b8152602060048201526024808201527f7661756c743a206d7573742062652063616c6c65642066726f6d2044575374616044820152636b696e6760e01b60648201526084016104d3565b6101ca54600160a01b900460ff16610b9d5760405162461bcd60e51b815260206004820152602360248201527f7661756c743a2064647820726577617264206475726174696f6e20697320656e60448201526219195960ea1b60648201526084016104d3565b6101c354421115610bbf576107f4824260006101c4546101c5546001876114fa565b6000610bcf610379846000610c15565b80519091506001600160a01b0316610bfb57610bfb836101c35460006101c4546101c5546001886114fa565b818160c001818151610c0d9190611e7f565b905250505050565b6040516bffffffffffffffffffffffff19606084901b1660208201526034810182905260009060540160405160208183030381529060405280519060200120905092915050565b610c64611258565b610c6c6112b2565b60005b81811015610cae57610ca6838383818110610c9a57634e487b7160e01b600052603260045260246000fd5b90506020020135610924565b600101610c6f565b506107f4600160c955565b60009182526065602090815260408084206001600160a01b0393909316845291905290205460ff1690565b600054610100900460ff1615808015610d045750600054600160ff909116105b80610d1e5750303b158015610d1e575060005460ff166001145b610d815760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016104d3565b6000805460ff191660011790558015610da4576000805461ff0019166101001790555b6001600160a01b038416610dca5760405162461bcd60e51b81526004016104d390611d99565b6001600160a01b038316610df05760405162461bcd60e51b81526004016104d390611d99565b6001600160a01b038616610e165760405162461bcd60e51b81526004016104d390611d99565b6001600160a01b038516610e3c5760405162461bcd60e51b81526004016104d390611d99565b6101c38290556101ca80546101c680546001600160a01b038981166001600160a01b0319928316179092556101c880548884169083161790556101c98054898416921691909117905563031704006101c45562278d006101c5556001600160a81b031990911690881617600160a01b179055610ec6600080516020611fa083398151915288611203565b8015610f0c576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50505050505050565b610f1d611a8b565b5060009081526101cd602090815260409182902082516101208101845281546001600160a01b031681526001820154928101929092526002810154928201929092526003820154606082015260048201546080820152600582015460ff908116151560a0830152600683015460c0830152600783015460e0830152600890920154909116151561010082015290565b600080516020611fa0833981519152610fc481611085565b6101ca54600160a01b900460ff16610fdd576001610fe0565b60005b6101ca8054911515600160a01b0260ff60a01b1990921691909117905550565b600061101a600080516020611f6083398151915233610cb9565b905090565b60008281526065602052604090206001015461103a81611085565b6107758383611115565b61104c611a8b565b6110596103798484610c15565b9392505050565b6001600160a01b03811660009081526101ce6020526040812054610469908390610c15565b61092181336117e4565b6110998282610cb9565b6107f45760008281526065602090815260408083206001600160a01b03851684529091529020805460ff191660011790556110d13390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b61111f8282610cb9565b156107f45760008281526065602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b600054610100900460ff166111a35760405162461bcd60e51b81526004016104d390611db5565b565b600054610100900460ff166111cc5760405162461bcd60e51b81526004016104d390611db5565b6111a361183d565b600054610100900460ff166111fb5760405162461bcd60e51b81526004016104d390611db5565b6111a3611870565b6107f4828261108f565b600082815260656020526040808220600101805490849055905190918391839186917fbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff9190a4505050565b600260c95414156112ab5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016104d3565b600260c955565b60975460ff16156111a35760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016104d3565b6020810151600090429081108061131157508261010001515b1561131f5750600092915050565b826060015183604001516113339190611e7f565b811061134d578260e001518360c001516110599190611ed6565b600083604001518261135f9190611ed6565b608085015190915060006113738284611e97565b905060006113818383611eb7565b905060008760600151828960c0015161139a9190611eb7565b6113a49190611e97565b90508760e00151816113b69190611ed6565b98975050505050505050565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b179052915160009283929087169161141e9190611cdb565b6000604051808303816000865af19150503d806000811461145b576040519150601f19603f3d011682016040523d82523d6000602084013e611460565b606091505b509150915081801561148a57508051158061148a57508080602001905181019061148a9190611c13565b6114ec5760405162461bcd60e51b815260206004820152602d60248201527f5472616e7366657248656c7065723a3a736166655472616e736665723a20747260448201526c185b9cd9995c8819985a5b1959609a1b60648201526084016104d3565b5050505050565b600160c955565b600084116115555760405162461bcd60e51b815260206004820152602260248201527f546f6b656e56657374696e673a206475726174696f6e206d757374206265203e604482015261020360f41b60648201526084016104d3565b600081116115a55760405162461bcd60e51b815260206004820181905260248201527f546f6b656e56657374696e673a20616d6f756e74206d757374206265203e203060448201526064016104d3565b600183101561160c5760405162461bcd60e51b815260206004820152602d60248201527f546f6b656e56657374696e673a20736c696365506572696f645365636f6e647360448201526c206d757374206265203e3d203160981b60648201526084016104d3565b8484101561166c5760405162461bcd60e51b815260206004820152602760248201527f546f6b656e56657374696e673a206475726174696f6e206d757374206265203e6044820152661e9031b634b33360c91b60648201526084016104d3565b600061167788611060565b905060006116858789611e7f565b60408051610120810182526001600160a01b03808d16825260208083018581528385018e8152606085018d8152608086018d81528c151560a0880190815260c088018d8152600060e08a018181526101008b018281528f83526101cd9099529a90209851895498166001600160a01b031990981697909717885593516001880155915160028701555160038601555160048501555160058401805491151560ff199283161790559151600684015592516007830155915160089091018054911515919092161790556101cb5490915061175f908490611e7f565b6101cb556101cc805460018181019092557f9a37fbd5e796e9046c2f5f7e29046a230a4ba9ada48a80535ed93a51fec5cfbc018390556001600160a01b038a1660009081526101ce6020526040902054906117bb908290611e7f565b6001600160a01b03909a1660009081526101ce6020526040902099909955505050505050505050565b6117ee8282610cb9565b6107f4576117fb81611897565b6118068360206118a9565b604051602001611817929190611cf7565b60408051601f198184030181529082905262461bcd60e51b82526104d391600401611d66565b600054610100900460ff166118645760405162461bcd60e51b81526004016104d390611db5565b6097805460ff19169055565b600054610100900460ff166114f35760405162461bcd60e51b81526004016104d390611db5565b60606104696001600160a01b03831660145b606060006118b8836002611eb7565b6118c3906002611e7f565b67ffffffffffffffff8111156118e957634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015611913576020820181803683370190505b509050600360fc1b8160008151811061193c57634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a905350600f60fb1b8160018151811061197957634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a905350600061199d846002611eb7565b6119a8906001611e7f565b90505b6001811115611a3c576f181899199a1a9b1b9c1cb0b131b232b360811b85600f16601081106119ea57634e487b7160e01b600052603260045260246000fd5b1a60f81b828281518110611a0e57634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a90535060049490941c93611a3581611f1d565b90506119ab565b5083156110595760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e7460448201526064016104d3565b60405180610120016040528060006001600160a01b031681526020016000815260200160008152602001600081526020016000815260200160001515815260200160008152602001600081526020016000151581525090565b600060208284031215611af5578081fd5b813561105981611f4a565b60008060008060008060c08789031215611b18578182fd5b8635611b2381611f4a565b95506020870135611b3381611f4a565b94506040870135611b4381611f4a565b93506060870135611b5381611f4a565b92506080870135611b6381611f4a565b8092505060a087013590509295509295509295565b60008060408385031215611b8a578182fd5b8235611b9581611f4a565b946020939093013593505050565b60008060208385031215611bb5578182fd5b823567ffffffffffffffff80821115611bcc578384fd5b818501915085601f830112611bdf578384fd5b813581811115611bed578485fd5b8660208260051b8501011115611c01578485fd5b60209290920196919550909350505050565b600060208284031215611c24578081fd5b81518015158114611059578182fd5b600060208284031215611c44578081fd5b5035919050565b60008060408385031215611c5d578182fd5b823591506020830135611c6f81611f4a565b809150509250929050565b600060208284031215611c8b578081fd5b81356001600160e01b031981168114611059578182fd5b600060208284031215611cb3578081fd5b5051919050565b60008060408385031215611ccc578182fd5b50508035926020909101359150565b60008251611ced818460208701611eed565b9190910192915050565b76020b1b1b2b9b9a1b7b73a3937b61d1030b1b1b7bab73a1604d1b815260008351611d29816017850160208801611eed565b7001034b99036b4b9b9b4b733903937b6329607d1b6017918401918201528351611d5a816028840160208801611eed565b01602801949350505050565b6020815260008251806020840152611d85816040850160208701611eed565b601f01601f19169190910160400192915050565b6020808252600290820152615a4160f01b604082015260600190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b81516001600160a01b031681526020808301519082015260408083015190820152606080830151908201526080808301519082015260a082810151610120830191611e4e9084018215159052565b5060c083015160c083015260e083015160e083015261010080840151611e778285018215159052565b505092915050565b60008219821115611e9257611e92611f34565b500190565b600082611eb257634e487b7160e01b81526012600452602481fd5b500490565b6000816000190483118215151615611ed157611ed1611f34565b500290565b600082821015611ee857611ee8611f34565b500390565b60005b83811015611f08578181015183820152602001611ef0565b83811115611f17576000848401525b50505050565b600081611f2c57611f2c611f34565b506000190190565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b038116811461092157600080fdfeb19546dff01e856fb3f010c267a7b1c60363cf8a4664e21cc89c26224620214e65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862ad2e4c2619ea6e0faebc405d89445161c041e30fe03373ea0473da142d57d4514a2646970667358221220e586309e101c8b2b80add767865578e423df86afc53cd6aaf804b0c617bb1fc864736f6c63430008040033";

type DDXVaultConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DDXVaultConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DDXVault__factory extends ContractFactory {
  constructor(...args: DDXVaultConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DDXVault> {
    return super.deploy(overrides || {}) as Promise<DDXVault>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): DDXVault {
    return super.attach(address) as DDXVault;
  }
  override connect(signer: Signer): DDXVault__factory {
    return super.connect(signer) as DDXVault__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DDXVaultInterface {
    return new utils.Interface(_abi) as DDXVaultInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DDXVault {
    return new Contract(address, _abi, signerOrProvider) as DDXVault;
  }
}
