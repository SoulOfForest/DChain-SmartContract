/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { DGEVault, DGEVaultInterface } from "../../contracts/DGEVault";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "previousAdminRole",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "newAdminRole",
        type: "bytes32",
      },
    ],
    name: "RoleAdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleGranted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleRevoked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [],
    name: "DDXStaking",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DEFAULT_ADMIN_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DWStaking",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "OWNER_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PAUSER_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SUB_ADMIN_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "__DChainBase_init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "admin",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "holder",
        type: "address",
      },
    ],
    name: "computeNextVestingScheduleIdForHolder",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "holder",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "computeVestingScheduleIdForAddressAndIndex",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
    ],
    name: "getRoleAdmin",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "holder",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "getVestingScheduleByAddressAndIndex",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "beneficiary",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "cliff",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "start",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "duration",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "slicePeriodSeconds",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "revocable",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "amountTotal",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "released",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "revoked",
            type: "bool",
          },
        ],
        internalType: "struct DGEVault.VestingSchedule",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "grantRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "hasRole",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "contract IERC20WithBurn",
        name: "_rewardToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_treasury",
        type: "address",
      },
      {
        internalType: "address",
        name: "_DWStaking",
        type: "address",
      },
      {
        internalType: "address",
        name: "_DDXStaking",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_startVestingTime",
        type: "uint256",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "isAdmin",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "vestingScheduleIds",
        type: "bytes32[]",
      },
    ],
    name: "multipleRelease",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_originAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_lockedAmount",
        type: "uint256",
      },
    ],
    name: "reStakeWithVault",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "vestingScheduleId",
        type: "bytes32",
      },
    ],
    name: "release",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "renounceRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "revokeRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardApplicable",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_beneficiary",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "rewardFromDWStaking",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardToken",
    outputs: [
      {
        internalType: "contract IERC20WithBurn",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_originAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_lockedAmount",
        type: "uint256",
      },
    ],
    name: "stakeWithVault",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "startVestingTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "toggleRewardApplicable",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "treasury",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "vestingDuration",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "vestingPeriodInSeconds",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061244f806100206000396000f3fe608060405234801561001057600080fd5b50600436106101b05760003560e01c80638af104da116100ef578063d547741f11610092578063d547741f1461038d578063e58378bb146103a0578063e63ab1e9146103b5578063f51321d7146103ca578063f7c469f0146103ea578063f7c618c1146103fd578063f851a44014610411578063fa8428e41461042557600080fd5b80638af104da1461031f57806390b0b5f91461033257806391d148541461034557806395b6ef0c14610358578063a217fddf1461036b578063a83e8c8314610373578063ae5ff7851461037b578063b6db75a01461038557600080fd5b806361d027b31161015757806361d027b31461027357806362d6306f1461029f57806366088492146102b257806367d42a8b146102bc5780636a736cea146102cf5780637801d3a8146102e35780637b408a6b146102f75780638832e6721461030a57600080fd5b806301ffc9a7146101b5578063022f2354146101dd5780631514617e14610200578063248a9ca31461020a5780632f2ff15d1461022d57806336568abe1461024257806345c72587146102555780635c975abb14610268575b600080fd5b6101c86101c3366004611f86565b610438565b60405190151581526020015b60405180910390f35b6101f26000805160206123fa83398151915281565b6040519081526020016101d4565b6101f26101c45481565b6101f2610218366004611f3f565b60009081526065602052604090206001015490565b61024061023b366004611f57565b61046f565b005b610240610250366004611f57565b610499565b610240610263366004611fc6565b61051c565b60975460ff166101c8565b6101c654610287906001600160a01b031681565b6040516001600160a01b0390911681526020016101d4565b6102406102ad366004611df0565b6107a3565b6101f26101c35481565b6102406102ca366004611f3f565b6108cf565b6101c954610287906001600160a01b031681565b6101c854610287906001600160a01b031681565b610240610305366004611e84565b610a7b565b6101ca546101c890600160a01b900460ff1681565b6101f261032d366004611e84565b610bc4565b610240610340366004611eaf565b610c0b565b6101c8610353366004611f57565b610c68565b610240610366366004611e0c565b610c93565b6101f2600081565b610240610ec4565b6101f26101c55481565b6101c8610f18565b61024061039b366004611f57565b610f37565b6101f26000805160206123ba83398151915281565b6101f26000805160206123da83398151915281565b6103dd6103d8366004611e84565b610f5c565b6040516101d49190612236565b6101f26103f8366004611df0565b611044565b6101ca54610287906001600160a01b031681565b6101c754610287906001600160a01b031681565b610240610433366004611fc6565b611069565b60006001600160e01b03198216637965db0b60e01b148061046957506301ffc9a760e01b6001600160e01b03198316145b92915050565b60008281526065602052604090206001015461048a816112a3565b61049483836112ad565b505050565b6001600160a01b038116331461050e5760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b60648201526084015b60405180910390fd5b6105188282611333565b5050565b33811580159061052f57506101c3544211155b1561066b576000610556610544836000610bc4565b60009081526101cd6020526040902090565b80549091506001600160a01b038381169116146105855760405162461bcd60e51b815260040161050590612125565b6101ca54604051636eb1769f60e11b81526001600160a01b0384811660048301523060248301528692169063dd62ed3e9060440160206040518083038186803b1580156105d157600080fd5b505afa1580156105e5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106099190611fae565b10156106275760405162461bcd60e51b815260040161050590612183565b828160060154101561064b5760405162461bcd60e51b8152600401610505906120c8565b8281600601600082825461065f9190612330565b90915550610689915050565b81156106895760405162461bcd60e51b815260040161050590612205565b82156106a9576101ca546106a9906001600160a01b0316335b308661139a565b6101ca546101c85460405163095ea7b360e01b81526001600160a01b039283169263095ea7b3926106e192911690879060040161207c565b602060405180830381600087803b1580156106fb57600080fd5b505af115801561070f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107339190611f1f565b506101c854604051633a0f998160e11b81526001600160a01b039091169063741f33029061076b9087908790879087906004016122b5565b600060405180830381600087803b15801561078557600080fd5b505af1158015610799573d6000803e3d6000fd5b5050505050505050565b600054610100900460ff166107ca5760405162461bcd60e51b8152600401610505906121ba565b6001600160a01b0381166108205760405162461bcd60e51b815260206004820181905260248201527f4f776e65722063616e6e6f7420626520746865207a65726f20616464726573736044820152606401610505565b6108286114d8565b610830611501565b610838611530565b6108506000805160206123ba8339815191528261155f565b6108686000805160206123da8339815191528261155f565b61088e6000805160206123fa8339815191526000805160206123ba833981519152611569565b6108b46000805160206123da8339815191526000805160206123ba833981519152611569565b6108cc6000805160206123ba83398151915280611569565b50565b6108d76115b4565b6108df61160e565b60008181526101cd6020526040902060080154819060ff161561090157600080fd5b60008281526101cd6020526040902080546001600160a01b031633148061099b5760405162461bcd60e51b815260206004820152604260248201527f546f6b656e56657374696e673a206f6e6c792062656e6566696369617279206160448201527f6e64206f776e65722063616e2072656c656173652076657374656420746f6b656064820152616e7360f01b608482015260a401610505565b604080516101208101825283546001600160a01b03168152600184015460208201526002840154918101919091526003830154606082015260048301546080820152600583015460ff908116151560a0830152600684015460c0830152600784015460e08301526008840154161515610100820152600090610a1c90611654565b9050808360070154610a2e91906122d9565b600784015582546101cb546001600160a01b0390911690610a50908390612330565b6101cb556101ca54610a6c906001600160a01b03168284611725565b50505050506108cc600160c955565b6101c9546001600160a01b03163314610ae25760405162461bcd60e51b8152602060048201526024808201527f7661756c743a206d7573742062652063616c6c65642066726f6d2044575374616044820152636b696e6760e01b6064820152608401610505565b6101ca54600160a01b900460ff16610b485760405162461bcd60e51b815260206004820152602360248201527f7661756c743a2064647820726577617264206475726174696f6e20697320656e60448201526219195960ea1b6064820152608401610505565b6101c354421115610b6a57610518824260006101c4546101c55460018761185f565b6000610b7a610544846000610bc4565b80549091506001600160a01b0316610ba657610494836101c35460006101c4546101c55460018861185f565b81816006016000828254610bba91906122d9565b9091555050505050565b6040516bffffffffffffffffffffffff19606084901b1660208201526034810182905260009060540160405160208183030381529060405280519060200120905092915050565b610c136115b4565b610c1b61160e565b60005b81811015610c5d57610c55838383818110610c4957634e487b7160e01b600052603260045260246000fd5b905060200201356108cf565b600101610c1e565b50610518600160c955565b60009182526065602090815260408084206001600160a01b0393909316845291905290205460ff1690565b600054610100900460ff1615808015610cb35750600054600160ff909116105b80610ccd5750303b158015610ccd575060005460ff166001145b610d305760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610505565b6000805460ff191660011790558015610d53576000805461ff0019166101001790555b6001600160a01b038416610d795760405162461bcd60e51b815260040161050590612167565b6001600160a01b038316610d9f5760405162461bcd60e51b815260040161050590612167565b6001600160a01b038616610dc55760405162461bcd60e51b815260040161050590612167565b6001600160a01b038516610deb5760405162461bcd60e51b815260040161050590612167565b6101c38290556101ca80546101c680546001600160a01b038981166001600160a01b0319928316179092556101c880548884169083161790556101c98054898416921691909117905563018b82006101c45562278d006101c5556001600160a81b031990911690881617600160a01b179055610e756000805160206123fa8339815191528861155f565b8015610ebb576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50505050505050565b6000805160206123fa833981519152610edc816112a3565b6101ca54600160a01b900460ff16610ef5576001610ef8565b60005b6101ca8054911515600160a01b0260ff60a01b1990921691909117905550565b6000610f326000805160206123ba83398151915233610c68565b905090565b600082815260656020526040902060010154610f52816112a3565b6104948383611333565b610fb860405180610120016040528060006001600160a01b031681526020016000815260200160008152602001600081526020016000815260200160001515815260200160008152602001600081526020016000151581525090565b610fc56105448484610bc4565b604080516101208101825282546001600160a01b03168152600183015460208201526002830154918101919091526003820154606082015260048201546080820152600582015460ff908116151560a0830152600683015460c0830152600783015460e083015260089092015490911615156101008201529392505050565b6001600160a01b03811660009081526101ce6020526040812054610469908390610bc4565b33811580159061107c57506101c3544211155b156111a6576000611091610544836000610bc4565b80549091506001600160a01b038381169116146110c05760405162461bcd60e51b815260040161050590612125565b6101ca54604051636eb1769f60e11b81526001600160a01b0384811660048301523060248301528692169063dd62ed3e9060440160206040518083038186803b15801561110c57600080fd5b505afa158015611120573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111449190611fae565b10156111625760405162461bcd60e51b815260040161050590612183565b82816006015410156111865760405162461bcd60e51b8152600401610505906120c8565b8281600601600082825461119a9190612330565b909155506111c4915050565b81156111c45760405162461bcd60e51b815260040161050590612205565b82156111e1576101ca546111e1906001600160a01b0316336106a2565b6101ca546101c85460405163095ea7b360e01b81526001600160a01b039283169263095ea7b39261121992911690879060040161207c565b602060405180830381600087803b15801561123357600080fd5b505af1158015611247573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061126b9190611f1f565b506101c854604051638072e60f60e01b81526001600160a01b0390911690638072e60f9061076b9087908790879087906004016122b5565b6108cc8133611b49565b6112b78282610c68565b6105185760008281526065602090815260408083206001600160a01b03851684529091529020805460ff191660011790556112ef3390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b61133d8282610c68565b156105185760008281526065602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b604080516001600160a01b0385811660248301528481166044830152606480830185905283518084039091018152608490920183526020820180516001600160e01b03166323b872dd60e01b17905291516000928392908816916113fe9190611ff1565b6000604051808303816000865af19150503d806000811461143b576040519150601f19603f3d011682016040523d82523d6000602084013e611440565b606091505b509150915081801561146a57508051158061146a57508080602001905181019061146a9190611f1f565b6114d05760405162461bcd60e51b815260206004820152603160248201527f5472616e7366657248656c7065723a3a7472616e7366657246726f6d3a207472604482015270185b9cd9995c919c9bdb4819985a5b1959607a1b6064820152608401610505565b505050505050565b600054610100900460ff166114ff5760405162461bcd60e51b8152600401610505906121ba565b565b600054610100900460ff166115285760405162461bcd60e51b8152600401610505906121ba565b6114ff611ba2565b600054610100900460ff166115575760405162461bcd60e51b8152600401610505906121ba565b6114ff611bd5565b61051882826112ad565b600082815260656020526040808220600101805490849055905190918391839186917fbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff9190a4505050565b600260c95414156116075760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610505565b600260c955565b60975460ff16156114ff5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610505565b6020810151600090429081108061166d57508261010001515b1561167b5750600092915050565b8260600151836040015161168f91906122d9565b81106116b0578260e001518360c001516116a99190612330565b9392505050565b60008360400151826116c29190612330565b608085015190915060006116d682846122f1565b905060006116e48383612311565b905060008760600151828960c001516116fd9190612311565b61170791906122f1565b90508760e00151816117199190612330565b98975050505050505050565b600080846001600160a01b031663a9059cbb858560405160240161174a92919061207c565b6040516020818303038152906040529060e01b6020820180516001600160e01b0383818316178352505050506040516117839190611ff1565b6000604051808303816000865af19150503d80600081146117c0576040519150601f19603f3d011682016040523d82523d6000602084013e6117c5565b606091505b50915091508180156117ef5750805115806117ef5750808060200190518101906117ef9190611f1f565b6118515760405162461bcd60e51b815260206004820152602d60248201527f5472616e7366657248656c7065723a3a736166655472616e736665723a20747260448201526c185b9cd9995c8819985a5b1959609a1b6064820152608401610505565b5050505050565b600160c955565b600084116118ba5760405162461bcd60e51b815260206004820152602260248201527f546f6b656e56657374696e673a206475726174696f6e206d757374206265203e604482015261020360f41b6064820152608401610505565b6000811161190a5760405162461bcd60e51b815260206004820181905260248201527f546f6b656e56657374696e673a20616d6f756e74206d757374206265203e20306044820152606401610505565b60018310156119715760405162461bcd60e51b815260206004820152602d60248201527f546f6b656e56657374696e673a20736c696365506572696f645365636f6e647360448201526c206d757374206265203e3d203160981b6064820152608401610505565b848410156119d15760405162461bcd60e51b815260206004820152602760248201527f546f6b656e56657374696e673a206475726174696f6e206d757374206265203e6044820152661e9031b634b33360c91b6064820152608401610505565b60006119dc88611044565b905060006119ea87896122d9565b60408051610120810182526001600160a01b03808d16825260208083018581528385018e8152606085018d8152608086018d81528c151560a0880190815260c088018d8152600060e08a018181526101008b018281528f83526101cd9099529a90209851895498166001600160a01b031990981697909717885593516001880155915160028701555160038601555160048501555160058401805491151560ff199283161790559151600684015592516007830155915160089091018054911515919092161790556101cb54909150611ac49084906122d9565b6101cb556101cc805460018181019092557f9a37fbd5e796e9046c2f5f7e29046a230a4ba9ada48a80535ed93a51fec5cfbc018390556001600160a01b038a1660009081526101ce602052604090205490611b209082906122d9565b6001600160a01b03909a1660009081526101ce6020526040902099909955505050505050505050565b611b538282610c68565b61051857611b6081611bfc565b611b6b836020611c0e565b604051602001611b7c92919061200d565b60408051601f198184030181529082905262461bcd60e51b825261050591600401612095565b600054610100900460ff16611bc95760405162461bcd60e51b8152600401610505906121ba565b6097805460ff19169055565b600054610100900460ff166118585760405162461bcd60e51b8152600401610505906121ba565b60606104696001600160a01b03831660145b60606000611c1d836002612311565b611c289060026122d9565b67ffffffffffffffff811115611c4e57634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015611c78576020820181803683370190505b509050600360fc1b81600081518110611ca157634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a905350600f60fb1b81600181518110611cde57634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a9053506000611d02846002612311565b611d0d9060016122d9565b90505b6001811115611da1576f181899199a1a9b1b9c1cb0b131b232b360811b85600f1660108110611d4f57634e487b7160e01b600052603260045260246000fd5b1a60f81b828281518110611d7357634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a90535060049490941c93611d9a81612377565b9050611d10565b5083156116a95760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610505565b600060208284031215611e01578081fd5b81356116a9816123a4565b60008060008060008060c08789031215611e24578182fd5b8635611e2f816123a4565b95506020870135611e3f816123a4565b94506040870135611e4f816123a4565b93506060870135611e5f816123a4565b92506080870135611e6f816123a4565b8092505060a087013590509295509295509295565b60008060408385031215611e96578182fd5b8235611ea1816123a4565b946020939093013593505050565b60008060208385031215611ec1578182fd5b823567ffffffffffffffff80821115611ed8578384fd5b818501915085601f830112611eeb578384fd5b813581811115611ef9578485fd5b8660208260051b8501011115611f0d578485fd5b60209290920196919550909350505050565b600060208284031215611f30578081fd5b815180151581146116a9578182fd5b600060208284031215611f50578081fd5b5035919050565b60008060408385031215611f69578182fd5b823591506020830135611f7b816123a4565b809150509250929050565b600060208284031215611f97578081fd5b81356001600160e01b0319811681146116a9578182fd5b600060208284031215611fbf578081fd5b5051919050565b600080600060608486031215611fda578283fd5b505081359360208301359350604090920135919050565b60008251612003818460208701612347565b9190910192915050565b76020b1b1b2b9b9a1b7b73a3937b61d1030b1b1b7bab73a1604d1b81526000835161203f816017850160208801612347565b7001034b99036b4b9b9b4b733903937b6329607d1b6017918401918201528351612070816028840160208801612347565b01602801949350505050565b6001600160a01b03929092168252602082015260400190565b60208152600082518060208401526120b4816040850160208701612347565b601f01601f19169190910160400192915050565b6020808252603f908201527f706f6f6c3a2076657374696e67207363686564756c6520616d6f756e7420746f60408201527f74616c206e6f7420656e6f75676820746f20636f766572207374616b696e6700606082015260800190565b60208082526022908201527f706f6f6c3a2076657374696e67207363686564756c65206e6f74206578697374604082015261195960f21b606082015260800190565b6020808252600290820152615a4160f01b604082015260600190565b6020808252601a908201527f706f6f6c3a20616c6c6f77616e6365206e6f7420656e6f756768000000000000604082015260600190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b60208082526017908201527604c6f636b656420616d6f756e74206d757374206265203604c1b604082015260600190565b81516001600160a01b031681526020808301519082015260408083015190820152606080830151908201526080808301519082015260a0828101516101208301916122849084018215159052565b5060c083015160c083015260e083015160e0830152610100808401516122ad8285018215159052565b505092915050565b938452602084019290925260408301526001600160a01b0316606082015260800190565b600082198211156122ec576122ec61238e565b500190565b60008261230c57634e487b7160e01b81526012600452602481fd5b500490565b600081600019048311821515161561232b5761232b61238e565b500290565b6000828210156123425761234261238e565b500390565b60005b8381101561236257818101518382015260200161234a565b83811115612371576000848401525b50505050565b6000816123865761238661238e565b506000190190565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b03811681146108cc57600080fdfeb19546dff01e856fb3f010c267a7b1c60363cf8a4664e21cc89c26224620214e65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862ad2e4c2619ea6e0faebc405d89445161c041e30fe03373ea0473da142d57d4514a2646970667358221220056b19a71e676227334ce57f6510d81c8d26b663c137b06f65d025fe35646e2d64736f6c63430008040033";

type DGEVaultConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DGEVaultConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DGEVault__factory extends ContractFactory {
  constructor(...args: DGEVaultConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DGEVault> {
    return super.deploy(overrides || {}) as Promise<DGEVault>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): DGEVault {
    return super.attach(address) as DGEVault;
  }
  override connect(signer: Signer): DGEVault__factory {
    return super.connect(signer) as DGEVault__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DGEVaultInterface {
    return new utils.Interface(_abi) as DGEVaultInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DGEVault {
    return new Contract(address, _abi, signerOrProvider) as DGEVault;
  }
}
