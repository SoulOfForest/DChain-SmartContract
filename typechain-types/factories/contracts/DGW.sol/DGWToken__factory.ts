/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  DGWToken,
  DGWTokenInterface,
} from "../../../contracts/DGW.sol/DGWToken";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        internalType: "address",
        name: "tokenVesting_",
        type: "address",
      },
      {
        internalType: "address",
        name: "ido",
        type: "address",
      },
      {
        internalType: "address",
        name: "farming",
        type: "address",
      },
      {
        internalType: "address",
        name: "liquidity",
        type: "address",
      },
      {
        internalType: "address",
        name: "marketing",
        type: "address",
      },
      {
        internalType: "address",
        name: "community",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [],
    name: "MAXIMUM_CAP",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PRECISION",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "_minted_pool",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burnFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "buyFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "cap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "team",
        type: "address",
      },
      {
        internalType: "address",
        name: "treasury",
        type: "address",
      },
    ],
    name: "lock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "lpAddresses",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "pools_amount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "sellFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "swapRouter",
    outputs: [
      {
        internalType: "contract IPancakeRouter02",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenVesting",
    outputs: [
      {
        internalType: "contract IUncxTokenVesting",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_buyFee",
        type: "uint256",
      },
    ],
    name: "updateBuyFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_includeAddress",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_status",
        type: "bool",
      },
    ],
    name: "updatePairAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_sellFee",
        type: "uint256",
      },
    ],
    name: "updateSellFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_routerAddress",
        type: "address",
      },
    ],
    name: "updateSwapRouter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenVesting",
        type: "address",
      },
    ],
    name: "updateUNCXTokenVesting",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a06040523480156200001157600080fd5b50604051620021c7380380620021c7833981016040819052620000349162000674565b6a295be96e6406697200000088886003620000508382620007dc565b5060046200005f8282620007dc565b50505060008111620000b85760405162461bcd60e51b815260206004820152601560248201527f45524332304361707065643a206361702069732030000000000000000000000060448201526064015b60405180910390fd5b6080526005805460ff19169055620000d03362000254565b601180546001600160a01b0319166001600160a01b0388161790556040805160e0810182526a0422ca8b0a00a4250000008082526a108b2a2c28029094000000602083015291810182905260608101919091526a013da329b633647180000060808201526a084595161401484a00000060a08201526a02e5276153cd3fb380000060c0820152620001669060089060076200052d565b506200017885600860000154620002ae565b600f805460ff191660019081179091556200019b9085906008905b015462000320565b600f805461ff001916610100179055620001b9836008600262000193565b600f805462ff0000191662010000179055620001d9826008600462000193565b600f805460ff60201b1916640100000000179055620001fc816008600662000193565b5050600f805460ff60301b1916660100000000000017905550506107d06007555050610bb8600655505060108054738cfe327cec66d1c090dd72bd0ff11d690c33a2eb6001600160a01b0319909116179055620008d0565b600580546001600160a01b03838116610100818102610100600160a81b031985161790945560405193909204169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6005546001600160a01b03610100909104163314620003105760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401620000af565b6200031c828262000320565b5050565b6080518162000339620003ac60201b620007591760201c565b620003459190620008a8565b1115620003955760405162461bcd60e51b815260206004820152601960248201527f45524332304361707065643a20636170206578636565646564000000000000006044820152606401620000af565b6200031c8282620003b260201b62000d481760201c565b60025490565b60805181620003cb620003ac60201b620007591760201c565b620003d79190620008a8565b1115620004275760405162461bcd60e51b815260206004820152601960248201527f45524332304361707065643a20636170206578636565646564000000000000006044820152606401620000af565b6200031c82826200043e60201b62000d881760201c565b6001600160a01b038216620004965760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401620000af565b8060026000828254620004aa9190620008a8565b90915550506001600160a01b03821660009081526020819052604081208054839290620004d9908490620008a8565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a36200031c600083835b505050565b826007810192821562000569579160200282015b828111156200056957825182906001600160581b031690559160200191906001019062000541565b50620005779291506200057b565b5090565b5b808211156200057757600081556001016200057c565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620005ba57600080fd5b81516001600160401b0380821115620005d757620005d762000592565b604051601f8301601f19908116603f0116810190828211818310171562000602576200060262000592565b816040528381526020925086838588010111156200061f57600080fd5b600091505b8382101562000643578582018301518183018401529082019062000624565b600093810190920192909252949350505050565b80516001600160a01b03811681146200066f57600080fd5b919050565b600080600080600080600080610100898b0312156200069257600080fd5b88516001600160401b0380821115620006aa57600080fd5b620006b88c838d01620005a8565b995060208b0151915080821115620006cf57600080fd5b50620006de8b828c01620005a8565b975050620006ef60408a0162000657565b9550620006ff60608a0162000657565b94506200070f60808a0162000657565b93506200071f60a08a0162000657565b92506200072f60c08a0162000657565b91506200073f60e08a0162000657565b90509295985092959890939650565b600181811c908216806200076357607f821691505b6020821081036200078457634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200052857600081815260208120601f850160051c81016020861015620007b35750805b601f850160051c820191505b81811015620007d457828155600101620007bf565b505050505050565b81516001600160401b03811115620007f857620007f862000592565b62000810816200080984546200074e565b846200078a565b602080601f8311600181146200084857600084156200082f5750858301515b600019600386901b1c1916600185901b178555620007d4565b600085815260208120601f198616915b82811015620008795788860151825594840194600190910190840162000858565b5085821015620008985787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b80820180821115620008ca57634e487b7160e01b600052601160045260246000fd5b92915050565b6080516118db620008ec600039600061084501526118db6000f3fe608060405234801561001057600080fd5b50600436106101dc5760003560e01c8063467abe0a116101055780638f7cbc401161009d5780638f7cbc40146103e457806395d89b41146103f7578063a457c2d7146103ff578063a9059cbb14610412578063aaf5eb6814610425578063b98b677f1461042e578063c31c9c0714610441578063dd62ed3e14610454578063f2fde38b1461046757600080fd5b8063467abe0a1461035657806346ed56db14610369578063470624021461037c5780635c975abb1461038557806370a0823114610390578063715018a6146103b957806379cc6790146103c15780638456cb59146103d45780638da5cb5b146103dc57600080fd5b80632b14ca56116101785780632b14ca56146102d05780632c4c2719146102d9578063313ce567146102eb578063355274ea146102fa57806339509351146103025780633f4ba83a1461031557806340c10f191461031d57806342966c681461033057806342b206651461034357600080fd5b806306fdde03146101e1578063095ea7b3146101ff5780630a1a8d3c1461022257806317ffe1711461024d57806318160ddd146102625780631d933a4a146102745780631f4b21d41461028757806323b872dd146102aa5780632654fb41146102bd575b600080fd5b6101e961047a565b6040516101f69190611550565b60405180910390f35b61021261020d3660046115ba565b61050c565b60405190151581526020016101f6565b601154610235906001600160a01b031681565b6040516001600160a01b0390911681526020016101f6565b61026061025b3660046115e4565b610526565b005b6002545b6040519081526020016101f6565b610260610282366004611617565b61075f565b610212610295366004611630565b60126020526000908152604090205460ff1681565b6102126102b8366004611652565b6107f5565b6102126102cb366004611617565b610819565b61026660065481565b6102666a295be96e6406697200000081565b604051601281526020016101f6565b610266610843565b6102126103103660046115ba565b610867565b6102606108a1565b61026061032b3660046115ba565b6108da565b61026061033e366004611617565b610917565b610266610351366004611617565b610924565b610260610364366004611617565b61093b565b610260610377366004611630565b6109d2565b61026660075481565b60055460ff16610212565b61026661039e366004611630565b6001600160a01b031660009081526020819052604090205490565b610260610a23565b6102606103cf3660046115ba565b610a5c565b610260610a71565b610235610aa8565b6102606103f236600461168e565b610abc565b6101e9610b80565b61021261040d3660046115ba565b610b8f565b6102126104203660046115ba565b610c21565b61026661271081565b61026061043c366004611630565b610c2f565b601054610235906001600160a01b031681565b6102666104623660046115e4565b610c80565b610260610475366004611630565b610cab565b606060038054610489906116ca565b80601f01602080910402602001604051908101604052809291908181526020018280546104b5906116ca565b80156105025780601f106104d757610100808354040283529160200191610502565b820191906000526020600020905b8154815290600101906020018083116104e557829003601f168201915b5050505050905090565b60003361051a818585610e55565b60019150505b92915050565b3361052f610aa8565b6001600160a01b03161461055e5760405162461bcd60e51b815260040161055590611704565b60405180910390fd5b61056e30600860055b0154610f7a565b600f805465ff00000000001916650100000000001790556105923060086003610567565b600f805463ff00000019166301000000179055601154600d54600b546105cf9230926001600160a01b03909116916105ca9190611765565b610e55565b6040805160a080820183526001600160a01b038481168352600d546020808501919091526366e5c11084860152636871431060608086019190915260006080808701829052875195860188529389168552600b54858401526369adab1085880152636b392d108583015292840183905285516002808252918101909652939492939192919082015b61069b6040518060a0016040528060006001600160a01b0316815260200160008152602001600081526020016000815260200160006001600160a01b031681525090565b81526020019060019003908161065757905050905082816000815181106106c4576106c4611739565b602002602001018190525081816001815181106106e3576106e3611739565b60209081029190910101526011546040516313ef2b1b60e01b81526001600160a01b03909116906313ef2b1b906107209030908590600401611778565b600060405180830381600087803b15801561073a57600080fd5b505af115801561074e573d6000803e3d6000fd5b505050505050505050565b60025490565b33610768610aa8565b6001600160a01b03161461078e5760405162461bcd60e51b815260040161055590611704565b6127108111156107f05760405162461bcd60e51b815260206004820152602760248201527f546f6b656e3a2053776170204665652063616e206e6f74206c6172676572207460448201526668616e2033302560c81b6064820152608401610555565b600655565b600033610803858285610fbe565b61080e858585611038565b506001949350505050565b600f816007811061082957600080fd5b60209182820401919006915054906101000a900460ff1681565b7f000000000000000000000000000000000000000000000000000000000000000090565b3360008181526001602090815260408083206001600160a01b038716845290915281205490919061051a90829086906105ca908790611765565b336108aa610aa8565b6001600160a01b0316146108d05760405162461bcd60e51b815260040161055590611704565b6108d86110f8565b565b336108e3610aa8565b6001600160a01b0316146109095760405162461bcd60e51b815260040161055590611704565b6109138282610f7a565b5050565b610921338261118b565b50565b6008816007811061093457600080fd5b0154905081565b33610944610aa8565b6001600160a01b03161461096a5760405162461bcd60e51b815260040161055590611704565b6127108111156109cd5760405162461bcd60e51b815260206004820152602860248201527f546f6b656e3a2053776170204665652063616e206e6f74206c6172676572207460448201526768616e203130302560c01b6064820152608401610555565b600755565b336109db610aa8565b6001600160a01b031614610a015760405162461bcd60e51b815260040161055590611704565b601180546001600160a01b0319166001600160a01b0392909216919091179055565b33610a2c610aa8565b6001600160a01b031614610a525760405162461bcd60e51b815260040161055590611704565b6108d860006112bf565b610a67823383610fbe565b610913828261118b565b33610a7a610aa8565b6001600160a01b031614610aa05760405162461bcd60e51b815260040161055590611704565b6108d8611319565b60055461010090046001600160a01b031690565b33610ac5610aa8565b6001600160a01b031614610aeb5760405162461bcd60e51b815260040161055590611704565b6001600160a01b038216610b555760405162461bcd60e51b815260206004820152602b60248201527f546f6b656e3a205061697220616464726573732063616e206e6f74206265207a60448201526a65726f206164647265737360a81b6064820152608401610555565b6001600160a01b03919091166000908152601260205260409020805460ff1916911515919091179055565b606060048054610489906116ca565b3360008181526001602090815260408083206001600160a01b038716845290915281205490919083811015610c145760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610555565b61080e8286868403610e55565b60003361051a818585611038565b33610c38610aa8565b6001600160a01b031614610c5e5760405162461bcd60e51b815260040161055590611704565b601080546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b33610cb4610aa8565b6001600160a01b031614610cda5760405162461bcd60e51b815260040161055590611704565b6001600160a01b038116610d3f5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610555565b610921816112bf565b610d50610843565b81610d5a60025490565b610d649190611765565b1115610d825760405162461bcd60e51b8152600401610555906117fe565b61091382825b6001600160a01b038216610dde5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610555565b8060026000828254610df09190611765565b90915550506001600160a01b03821660009081526020819052604081208054839290610e1d908490611765565b90915550506040518181526001600160a01b038316906000906000805160206118868339815191529060200160405180910390a35050565b6001600160a01b038316610eb75760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610555565b6001600160a01b038216610f185760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610555565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b610f82610843565b81610f8c60025490565b610f969190611765565b1115610fb45760405162461bcd60e51b8152600401610555906117fe565b6109138282610d48565b6000610fca8484610c80565b9050600019811461103257818110156110255760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610555565b6110328484848403610e55565b50505050565b60105460009033906001600160a01b0316810361107157612710600654846110609190611831565b61106a9190611850565b91506110cd565b806001600160a01b0316856001600160a01b03161480156110aa57506001600160a01b03811660009081526012602052604090205460ff165b156110cd57612710600754846110c09190611831565b6110ca9190611850565b91505b6110e185856110dc8587611872565b611394565b81156110f1576110f1858361118b565b5050505050565b60055460ff166111415760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606401610555565b6005805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b6001600160a01b0382166111eb5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610555565b6001600160a01b0382166000908152602081905260409020548181101561125f5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610555565b6001600160a01b038316600090815260208190526040812083830390556002805484929061128e908490611872565b90915550506040518281526000906001600160a01b0385169060008051602061188683398151915290602001610f6d565b600580546001600160a01b03838116610100818102610100600160a81b031985161790945560405193909204169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60055460ff161561135f5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610555565b6005805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25861116e3390565b6001600160a01b0383166113f85760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610555565b6001600160a01b03821661145a5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610555565b6001600160a01b038316600090815260208190526040902054818110156114d25760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610555565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290611509908490611765565b92505081905550826001600160a01b0316846001600160a01b03166000805160206118868339815191528460405161154391815260200190565b60405180910390a3611032565b600060208083528351808285015260005b8181101561157d57858101830151858201604001528201611561565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b03811681146115b557600080fd5b919050565b600080604083850312156115cd57600080fd5b6115d68361159e565b946020939093013593505050565b600080604083850312156115f757600080fd5b6116008361159e565b915061160e6020840161159e565b90509250929050565b60006020828403121561162957600080fd5b5035919050565b60006020828403121561164257600080fd5b61164b8261159e565b9392505050565b60008060006060848603121561166757600080fd5b6116708461159e565b925061167e6020850161159e565b9150604084013590509250925092565b600080604083850312156116a157600080fd5b6116aa8361159e565b9150602083013580151581146116bf57600080fd5b809150509250929050565b600181811c908216806116de57607f821691505b6020821081036116fe57634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b808201808211156105205761052061174f565b6001600160a01b038381168252604060208084018290528451848301819052600093606092909183870190888301875b828110156117ee57815180518716855285810151868601528881015189860152878101518886015260809081015187169085015260a090930192908401906001016117a8565b50919a9950505050505050505050565b602080825260199082015278115490cc8c10d85c1c19590e8818d85c08195e18d959591959603a1b604082015260600190565b600081600019048311821515161561184b5761184b61174f565b500290565b60008261186d57634e487b7160e01b600052601260045260246000fd5b500490565b818103818111156105205761052061174f56feddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa2646970667358221220ca6cf279e2fb132cb75530726b6992db3c85ca997f0bc650f7d795a793d6b88b64736f6c63430008100033";

type DGWTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DGWTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DGWToken__factory extends ContractFactory {
  constructor(...args: DGWTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    name: PromiseOrValue<string>,
    symbol: PromiseOrValue<string>,
    tokenVesting_: PromiseOrValue<string>,
    ido: PromiseOrValue<string>,
    farming: PromiseOrValue<string>,
    liquidity: PromiseOrValue<string>,
    marketing: PromiseOrValue<string>,
    community: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DGWToken> {
    return super.deploy(
      name,
      symbol,
      tokenVesting_,
      ido,
      farming,
      liquidity,
      marketing,
      community,
      overrides || {}
    ) as Promise<DGWToken>;
  }
  override getDeployTransaction(
    name: PromiseOrValue<string>,
    symbol: PromiseOrValue<string>,
    tokenVesting_: PromiseOrValue<string>,
    ido: PromiseOrValue<string>,
    farming: PromiseOrValue<string>,
    liquidity: PromiseOrValue<string>,
    marketing: PromiseOrValue<string>,
    community: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      name,
      symbol,
      tokenVesting_,
      ido,
      farming,
      liquidity,
      marketing,
      community,
      overrides || {}
    );
  }
  override attach(address: string): DGWToken {
    return super.attach(address) as DGWToken;
  }
  override connect(signer: Signer): DGWToken__factory {
    return super.connect(signer) as DGWToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DGWTokenInterface {
    return new utils.Interface(_abi) as DGWTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DGWToken {
    return new Contract(address, _abi, signerOrProvider) as DGWToken;
  }
}
