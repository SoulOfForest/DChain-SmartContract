/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  DWToken,
  DWTokenInterface,
} from "../../../contracts/DW.sol/DWToken";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [],
    name: "PRECISION",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burnFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "cap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "includeAddress",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "cap",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_feeReceiver",
        type: "address",
      },
      {
        internalType: "address",
        name: "_sfsContract",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "sfsContract",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "swapFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_feeReceiver",
        type: "address",
      },
    ],
    name: "updateFeeReceiver",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_includeAddress",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_status",
        type: "bool",
      },
    ],
    name: "updateIncludeAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_swapFee",
        type: "uint256",
      },
    ],
    name: "updateSwapFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50611a7b806100206000396000f3fe608060405234801561001057600080fd5b506004361061018f5760003560e01c806370a08231116100e457806395d89b411161009257806395d89b4114610331578063a457c2d714610339578063a9059cbb1461034c578063aaf5eb681461035f578063bf16f65a14610368578063c69bebe41461037b578063dd62ed3e1461038e578063f2fde38b146103a157600080fd5b806370a082311461029d578063715018a6146102c657806379cc6790146102ce5780637e77c503146102e15780638456cb59146102f45780638da5cb5b146102fc57806393995d4b1461030d57600080fd5b8063395093511161014157806339509351146102325780633f4ba83a146102455780633fa4368d1461024f57806340c10f191461026257806342966c681461027557806354cf2aeb146102885780635c975abb1461029257600080fd5b806306fdde031461019457806307e8fcc6146101b2578063095ea7b3146101d357806318160ddd146101f657806323b872dd14610208578063313ce5671461021b578063355274ea1461022a575b600080fd5b61019c6103b4565b6040516101a991906114da565b60405180910390f35b610130546101c6906001600160a01b031681565b6040516101a99190611528565b6101e66101e1366004611558565b610446565b60405190151581526020016101a9565b6035545b6040519081526020016101a9565b6101e6610216366004611582565b610460565b604051601281526020016101a9565b6065546101fa565b6101e6610240366004611558565b61050c565b61024d61052e565b005b61024d61025d3660046115be565b610540565b61024d610270366004611558565b6105d9565b61024d6102833660046115fa565b6105ef565b6101fa61012e5481565b60ca5460ff166101e6565b6101fa6102ab366004611613565b6001600160a01b031660009081526033602052604090205490565b61024d6105fc565b61024d6102dc366004611558565b61060e565b61024d6102ef3660046116d8565b610623565b61024d61083f565b60fc546001600160a01b03166101c6565b6101e661031b366004611613565b6101316020526000908152604090205460ff1681565b61019c61084f565b6101e6610347366004611558565b61085e565b6101e661035a366004611558565b6108e4565b6101fa61271081565b61024d6103763660046115fa565b61096b565b61024d610389366004611613565b6109db565b6101fa61039c366004611767565b610a69565b61024d6103af366004611613565b610a94565b6060603680546103c39061179a565b80601f01602080910402602001604051908101604052809291908181526020018280546103ef9061179a565b801561043c5780601f106104115761010080835404028352916020019161043c565b820191906000526020600020905b81548152906001019060200180831161041f57829003601f168201915b5050505050905090565b600033610454818585610b0a565b60019150505b92915050565b600061012e5460000361048e5760405162461bcd60e51b8152600401610485906117d4565b60405180910390fd5b3360009081526101316020526040902054829060ff1615156001036104d65761271061012e54846104bf9190611821565b6104c99190611840565b6104d39084611862565b90505b336104e2868286610c2f565b6104f5866104f08487611862565b610ca9565b610500868684610dc8565b50600195945050505050565b60003361045481858561051f8383610a69565b6105299190611875565b610b0a565b610536610f61565b61053e610fbb565b565b610548610f61565b6001600160a01b0382166105ad5760405162461bcd60e51b815260206004820152602660248201527f546f6b656e3a20416464726573732063616e206e6f74206265207a65726f206160448201526564647265737360d01b6064820152608401610485565b6001600160a01b0391909116600090815261013160205260409020805460ff1916911515919091179055565b6105e1610f61565b6105eb8282611007565b5050565b6105f93382610ca9565b50565b610604610f61565b61053e6000611046565b610619823383610c2f565b6105eb8282610ca9565b600054610100900460ff16158080156106435750600054600160ff909116105b8061065d5750303b15801561065d575060005460ff166001145b6106c05760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610485565b6000805460ff1916600117905580156106e3576000805461ff0019166101001790555b6106ed8686611098565b6106f6846110c9565b6106fe6110f9565b610706611120565b61070e61114f565b61012f80546001600160a01b038086166001600160a01b03199283161790925561013080549285169290911691909117905561074861117e565b6107d061012e556101316020527f3be64d8cbd6e2efb0b75975c6e7dc84b5431005cc836105ae26df888836c2f628054600160ff1991821681179092557f60e1b96ab363551a88bd3f4e3d25f9db131b74ed4cbace4879dbed5357ebe5e88054821683179055732d03c57c96ed8111545356c2d4288d1125c6e6d36000527f70e66ae5e0302471b34063af60784eab05863ffbc023eddb0955545777803437805490911690911790558015610837576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050505050565b610847610f61565b61053e611209565b6060603780546103c39061179a565b6000338161086c8286610a69565b9050838110156108cc5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610485565b6108d98286868403610b0a565b506001949350505050565b600061012e546000036109095760405162461bcd60e51b8152600401610485906117d4565b3360009081526101316020526040902054829060ff1615156001036109515761271061012e548461093a9190611821565b6109449190611840565b61094e9084611862565b90505b33610960816104f08487611862565b6108d9818684610dc8565b610973610f61565b61012c8111156109d55760405162461bcd60e51b815260206004820152602760248201527f546f6b656e3a2053776170204665652063616e206e6f74206c6172676572207460448201526668616e2033302560c81b6064820152608401610485565b61012e55565b6109e3610f61565b6001600160a01b038116610a455760405162461bcd60e51b8152602060048201526024808201527f4665652072656365697665722063616e206e6f74206265207a65726f206164646044820152637265737360e01b6064820152608401610485565b61012f80546001600160a01b0319166001600160a01b0383161790556105f961117e565b6001600160a01b03918216600090815260346020908152604080832093909416825291909152205490565b610a9c610f61565b6001600160a01b038116610b015760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610485565b6105f981611046565b6001600160a01b038316610b6c5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610485565b6001600160a01b038216610bcd5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610485565b6001600160a01b0383811660008181526034602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6000610c3b8484610a69565b90506000198114610ca35781811015610c965760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610485565b610ca38484848403610b0a565b50505050565b6001600160a01b038216610d095760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610485565b6001600160a01b03821660009081526033602052604090205481811015610d7d5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610485565b6001600160a01b0383166000818152603360209081526040808320868603905560358054879003905551858152919291600080516020611a268339815191529101610c22565b505050565b6001600160a01b038316610e2c5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610485565b6001600160a01b038216610e8e5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610485565b6001600160a01b03831660009081526033602052604090205481811015610f065760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610485565b6001600160a01b038085166000818152603360205260408082208686039055928616808252908390208054860190559151600080516020611a2683398151915290610f549086815260200190565b60405180910390a3610ca3565b60fc546001600160a01b0316331461053e5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610485565b610fc3611246565b60ca805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b604051610ffd9190611528565b60405180910390a1565b6065548161101460355490565b61101e9190611875565b111561103c5760405162461bcd60e51b815260040161048590611888565b6105eb828261128f565b60fc80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff166110bf5760405162461bcd60e51b8152600401610485906118bb565b6105eb82826112ce565b600054610100900460ff166110f05760405162461bcd60e51b8152600401610485906118bb565b6105f98161130e565b600054610100900460ff1661053e5760405162461bcd60e51b8152600401610485906118bb565b600054610100900460ff166111475760405162461bcd60e51b8152600401610485906118bb565b61053e611382565b600054610100900460ff166111765760405162461bcd60e51b8152600401610485906118bb565b61053e6113b2565b610130546001600160a01b03161561053e576101305461012f54604051632210724360e11b81526001600160a01b0392831692634420e486926111c692911690600401611528565b6020604051808303816000875af11580156111e5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105f99190611906565b6112116113e5565b60ca805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610ff03390565b60ca5460ff1661053e5760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606401610485565b6065548161129c60355490565b6112a69190611875565b11156112c45760405162461bcd60e51b815260040161048590611888565b6105eb828261142b565b600054610100900460ff166112f55760405162461bcd60e51b8152600401610485906118bb565b60366113018382611965565b506037610dc38282611965565b600054610100900460ff166113355760405162461bcd60e51b8152600401610485906118bb565b6000811161137d5760405162461bcd60e51b8152602060048201526015602482015274045524332304361707065643a20636170206973203605c1b6044820152606401610485565b606555565b600054610100900460ff166113a95760405162461bcd60e51b8152600401610485906118bb565b61053e33611046565b600054610100900460ff166113d95760405162461bcd60e51b8152600401610485906118bb565b60ca805460ff19169055565b60ca5460ff161561053e5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610485565b6001600160a01b0382166114815760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610485565b80603560008282546114939190611875565b90915550506001600160a01b038216600081815260336020908152604080832080548601905551848152600080516020611a26833981519152910160405180910390a35050565b600060208083528351808285015260005b81811015611507578581018301518582016040015282016114eb565b506000604082860101526040601f19601f8301168501019250505092915050565b6001600160a01b0391909116815260200190565b80356001600160a01b038116811461155357600080fd5b919050565b6000806040838503121561156b57600080fd5b6115748361153c565b946020939093013593505050565b60008060006060848603121561159757600080fd5b6115a08461153c565b92506115ae6020850161153c565b9150604084013590509250925092565b600080604083850312156115d157600080fd5b6115da8361153c565b9150602083013580151581146115ef57600080fd5b809150509250929050565b60006020828403121561160c57600080fd5b5035919050565b60006020828403121561162557600080fd5b61162e8261153c565b9392505050565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261165c57600080fd5b813567ffffffffffffffff8082111561167757611677611635565b604051601f8301601f19908116603f0116810190828211818310171561169f5761169f611635565b816040528381528660208588010111156116b857600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080600080600060a086880312156116f057600080fd5b853567ffffffffffffffff8082111561170857600080fd5b61171489838a0161164b565b9650602088013591508082111561172a57600080fd5b506117378882890161164b565b9450506040860135925061174d6060870161153c565b915061175b6080870161153c565b90509295509295909350565b6000806040838503121561177a57600080fd5b6117838361153c565b91506117916020840161153c565b90509250929050565b600181811c908216806117ae57607f821691505b6020821081036117ce57634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252601f908201527f546f6b656e3a2073776170206665652063616e206e6f74206265207a65726f00604082015260600190565b634e487b7160e01b600052601160045260246000fd5b600081600019048311821515161561183b5761183b61180b565b500290565b60008261185d57634e487b7160e01b600052601260045260246000fd5b500490565b8181038181111561045a5761045a61180b565b8082018082111561045a5761045a61180b565b602080825260199082015278115490cc8c10d85c1c19590e8818d85c08195e18d959591959603a1b604082015260600190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b60006020828403121561191857600080fd5b5051919050565b601f821115610dc357600081815260208120601f850160051c810160208610156119465750805b601f850160051c820191505b8181101561083757828155600101611952565b815167ffffffffffffffff81111561197f5761197f611635565b6119938161198d845461179a565b8461191f565b602080601f8311600181146119c857600084156119b05750858301515b600019600386901b1c1916600185901b178555610837565b600085815260208120601f198616915b828110156119f7578886015182559484019460019091019084016119d8565b5085821015611a155787850151600019600388901b60f8161c191681555b5050505050600190811b0190555056feddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa2646970667358221220eedfa85962340ef6849ff9829650ebb851f6531cc6f1a62aba13e31c82046fa264736f6c63430008100033";

type DWTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DWTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DWToken__factory extends ContractFactory {
  constructor(...args: DWTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DWToken> {
    return super.deploy(overrides || {}) as Promise<DWToken>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): DWToken {
    return super.attach(address) as DWToken;
  }
  override connect(signer: Signer): DWToken__factory {
    return super.connect(signer) as DWToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DWTokenInterface {
    return new utils.Interface(_abi) as DWTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DWToken {
    return new Contract(address, _abi, signerOrProvider) as DWToken;
  }
}
