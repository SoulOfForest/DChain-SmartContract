/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { IDOPool, IDOPoolInterface } from "../../contracts/IDOPool";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_usdc",
        type: "address",
      },
      {
        internalType: "address",
        name: "_nikaStaking",
        type: "address",
      },
      {
        internalType: "address",
        name: "_oracle",
        type: "address",
      },
      {
        internalType: "address",
        name: "_treasuryAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "BuyToken",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "UsdcBought",
    type: "event",
  },
  {
    stateMutability: "nonpayable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "Oracle",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "TEN_MINUTES",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "USDC",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_referrer",
        type: "address",
      },
    ],
    name: "buyToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalTokenSold",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "getTotalUSDStakedAndBought",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nikaStaking",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenSold",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "treasuryAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_usdc",
        type: "address",
      },
      {
        internalType: "address",
        name: "_nikaStaking",
        type: "address",
      },
      {
        internalType: "address",
        name: "_oracle",
        type: "address",
      },
    ],
    name: "updateAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_minAmount",
        type: "uint256",
      },
    ],
    name: "updateMinAmount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_nikaStaking",
        type: "address",
      },
    ],
    name: "updateNikaStakingAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_oracle",
        type: "address",
      },
    ],
    name: "updateOracleAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    name: "updateTokenAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_wallet",
        type: "address",
      },
    ],
    name: "updateTreasuryWallet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_usdc",
        type: "address",
      },
    ],
    name: "updateUSDAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "usdcBought",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amountNika",
        type: "uint256",
      },
    ],
    name: "usdcUserBought",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawFundUSDC",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "withdrawToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x608060405260006006553480156200001657600080fd5b5060405162001a5b38038062001a5b83398101604081905262000039916200012b565b6200004433620000be565b6000805460ff60a01b19169055600380546001600160a01b03199081166001600160a01b03968716179091556004805482169686169690961790955560028054861693851693909317909255600180548516918416919091179055600580549093169116179055683635c9adc5dea000006007556200019b565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b03811681146200012657600080fd5b919050565b600080600080600060a086880312156200014457600080fd5b6200014f866200010e565b94506200015f602087016200010e565b93506200016f604087016200010e565b92506200017f606087016200010e565b91506200018f608087016200010e565b90509295509295909350565b6118b080620001ab6000396000f3fe6080604052600436106101655760003560e01c80639b2cb5d8116100c1578063e6afdd1a1161007a578063e6afdd1a146103f5578063e80a018014610415578063f24a534e14610435578063f2fde38b14610455578063f7023bb614610475578063fc0c546a14610495578063ff897dbd146104b55761016f565b80639b2cb5d8146103345780639e281a981461034a578063bbee50191461036a578063c5f956af146103a0578063c9fbe5f6146103c0578063cad4bb5c146103e05761016f565b80636691461a1161011e5780636691461a1461025d578063715018a61461027d5780637f6d21f914610292578063809d458d146102b257806389a30271146102d25780638da5cb5b146102ff5780639134709e146103145761016f565b8063160c018a14610180578063188f1292146101b05780632ecd7020146101eb5780634b91c8ce14610200578063519ee19e146102225780635c975abb146102385761016f565b3661016f57600080fd5b34801561017b57600080fd5b600080fd5b34801561018c57600080fd5b5061019661025881565b60405163ffffffff90911681526020015b60405180910390f35b3480156101bc57600080fd5b506101dd6101cb36600461156c565b60086020526000908152604090205481565b6040519081526020016101a7565b3480156101f757600080fd5b506006546101dd565b34801561020c57600080fd5b5061022061021b36600461156c565b6104d5565b005b34801561022e57600080fd5b506101dd60065481565b34801561024457600080fd5b5061024d61052f565b60405190151581526020016101a7565b34801561026957600080fd5b5061022061027836600461156c565b61053f565b34801561028957600080fd5b50610220610590565b34801561029e57600080fd5b506102206102ad36600461158e565b6105cb565b3480156102be57600080fd5b506102206102cd36600461156c565b610881565b3480156102de57600080fd5b506003546102f2906001600160a01b031681565b6040516101a791906115b8565b34801561030b57600080fd5b506102f26108d2565b34801561032057600080fd5b5061022061032f3660046115cc565b6108e1565b34801561034057600080fd5b506101dd60075481565b34801561035657600080fd5b5061022061036536600461158e565b610e0e565b34801561037657600080fd5b506101dd61038536600461156c565b6001600160a01b031660009081526008602052604090205490565b3480156103ac57600080fd5b506005546102f2906001600160a01b031681565b3480156103cc57600080fd5b506002546102f2906001600160a01b031681565b3480156103ec57600080fd5b5061022061108b565b34801561040157600080fd5b506102206104103660046115f8565b6112ba565b34801561042157600080fd5b5061022061043036600461156c565b611339565b34801561044157600080fd5b506001546102f2906001600160a01b031681565b34801561046157600080fd5b5061022061047036600461156c565b61138a565b34801561048157600080fd5b5061022061049036600461156c565b61142a565b3480156104a157600080fd5b506004546102f2906001600160a01b031681565b3480156104c157600080fd5b506102206104d036600461164c565b61147b565b336104de6108d2565b6001600160a01b03161461050d5760405162461bcd60e51b815260040161050490611665565b60405180910390fd5b600380546001600160a01b0319166001600160a01b0392909216919091179055565b600054600160a01b900460ff1690565b336105486108d2565b6001600160a01b03161461056e5760405162461bcd60e51b815260040161050490611665565b600480546001600160a01b0319166001600160a01b0392909216919091179055565b336105996108d2565b6001600160a01b0316146105bf5760405162461bcd60e51b815260040161050490611665565b6105c960006114af565b565b6105d361052f565b156105f05760405162461bcd60e51b81526004016105049061169a565b6001546001600160a01b03166106185760405162461bcd60e51b8152600401610504906116c4565b6002546001600160a01b03166106405760405162461bcd60e51b815260040161050490611707565b6002546001600160a01b0316331461069a5760405162461bcd60e51b815260206004820181905260248201527f506f6f6c3a2043616c6c6572206e6f74207374616b696e6720616464726573736044820152606401610504565b6001546040805163e56522a960e01b815290516000926001600160a01b03169163e56522a99160048083019260209291908290030181865afa1580156106e4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107089190611754565b905060006107168242611790565b905061025863ffffffff8216111561079157600160009054906101000a90046001600160a01b03166001600160a01b031663a2e620456040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561077857600080fd5b505af115801561078c573d6000803e3d6000fd5b505050505b60015460048054604051633ddac95360e01b81526000936001600160a01b0390811693633ddac953936107c9939216918991016117b4565b602060405180830381865afa1580156107e6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061080a91906117cd565b6001600160a01b0386166000908152600860205260408120805492935083929091906108379084906117e6565b90915550506040518181526001600160a01b038616907fb95f4b1391c6c74fda93c5008437f4f9c32674234e8d7e22c7bb2dd7c69271d09060200160405180910390a25050505050565b3361088a6108d2565b6001600160a01b0316146108b05760405162461bcd60e51b815260040161050490611665565b600580546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b031690565b6108e961052f565b156109065760405162461bcd60e51b81526004016105049061169a565b60075482116109695760405162461bcd60e51b815260206004820152602960248201527f706f6f6c3a20616d6f756e74206d7573742067726561746572207468616e206d6044820152681a5b88185b5bdd5b9d60ba1b6064820152608401610504565b6003546001600160a01b03166109c15760405162461bcd60e51b815260206004820181905260248201527f706f6f6c3a20757364632063616e74206e6f74206265203020616464726573736044820152606401610504565b6004546001600160a01b0316610a245760405162461bcd60e51b815260206004820152602260248201527f506f6f6c3a20546f6b656e2043616e6e6f74206265207a65726f206164647265604482015261737360f01b6064820152608401610504565b6001546001600160a01b0316610a4c5760405162461bcd60e51b8152600401610504906116c4565b6002546001600160a01b0316610a745760405162461bcd60e51b815260040161050490611707565b600254604051631ff7edab60e01b815282916001600160a01b031690631ff7edab90610aa49033906004016115b8565b602060405180830381865afa158015610ac1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ae591906117ff565b1515600003610b0a576001600160a01b038216610b0a57506005546001600160a01b03165b6001546040805163e56522a960e01b815290516000926001600160a01b03169163e56522a99160048083019260209291908290030181865afa158015610b54573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b789190611754565b90506000610b868242611790565b905061025863ffffffff82161115610c0157600160009054906101000a90046001600160a01b03166001600160a01b031663a2e620456040518163ffffffff1660e01b8152600401600060405180830381600087803b158015610be857600080fd5b505af1158015610bfc573d6000803e3d6000fd5b505050505b600154600354604051633ddac95360e01b81526000926001600160a01b0390811692633ddac95392610c3b92909116908a906004016117b4565b602060405180830381865afa158015610c58573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c7c91906117cd565b33600090815260086020526040812080549293508892909190610ca09084906117e6565b90915550610caf9050866114ff565b6004805460025460405163095ea7b360e01b81526001600160a01b039283169363095ea7b393610ce39316918691016117b4565b6020604051808303816000875af1158015610d02573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d2691906117ff565b5060025460405163ded987bb60e01b8152600481018390523360248201526001600160a01b0386811660448301529091169063ded987bb90606401600060405180830381600087803b158015610d7b57600080fd5b505af1158015610d8f573d6000803e3d6000fd5b50505050610d9c8161153c565b60405181815233907fdd06b66c3ba8126086cd863137d6f3b86ce5bcf4309cac390cc265e39194d0b29060200160405180910390a260405186815233907fb95f4b1391c6c74fda93c5008437f4f9c32674234e8d7e22c7bb2dd7c69271d09060200160405180910390a2505050505050565b33610e176108d2565b6001600160a01b031614610e3d5760405162461bcd60e51b815260040161050490611665565b6001600160a01b038216610e9d5760405162461bcd60e51b815260206004820152602160248201527f506f6f6c3a20746f6b656e2063616e74206e6f742062652030206164647265736044820152607360f81b6064820152608401610504565b6040516370a0823160e01b81526000906001600160a01b038416906370a0823190610ecc9030906004016115b8565b602060405180830381865afa158015610ee9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f0d91906117cd565b11610f2a5760405162461bcd60e51b815260040161050490611821565b6040516370a0823160e01b815281906001600160a01b038416906370a0823190610f589030906004016115b8565b602060405180830381865afa158015610f75573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f9991906117cd565b1015610fe75760405162461bcd60e51b815260206004820152601e60248201527f506f6f6c3a3a494e56414c49445f57495448445241575f414d4f554e545300006044820152606401610504565b6005546001600160a01b031661100f5760405162461bcd60e51b81526004016105049061184e565b60055460405163a9059cbb60e01b81526001600160a01b038481169263a9059cbb92611043929091169085906004016117b4565b6020604051808303816000875af1158015611062573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061108691906117ff565b505050565b336110946108d2565b6001600160a01b0316146110ba5760405162461bcd60e51b815260040161050490611665565b6003546001600160a01b03166111125760405162461bcd60e51b815260206004820181905260248201527f506f6f6c3a20757364632063616e74206e6f74206265203020616464726573736044820152606401610504565b6003546040516370a0823160e01b81526000916001600160a01b0316906370a08231906111439030906004016115b8565b602060405180830381865afa158015611160573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061118491906117cd565b116111a15760405162461bcd60e51b815260040161050490611821565b6005546001600160a01b03166111c95760405162461bcd60e51b81526004016105049061184e565b6003546040516370a0823160e01b81526000916001600160a01b0316906370a08231906111fa9030906004016115b8565b602060405180830381865afa158015611217573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061123b91906117cd565b60035460055460405163a9059cbb60e01b81529293506001600160a01b039182169263a9059cbb9261127392169085906004016117b4565b6020604051808303816000875af1158015611292573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112b691906117ff565b5050565b336112c36108d2565b6001600160a01b0316146112e95760405162461bcd60e51b815260040161050490611665565b600480546001600160a01b039586166001600160a01b0319918216179091556003805494861694821694909417909355600280549285169284169290921790915560018054919093169116179055565b336113426108d2565b6001600160a01b0316146113685760405162461bcd60e51b815260040161050490611665565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b336113936108d2565b6001600160a01b0316146113b95760405162461bcd60e51b815260040161050490611665565b6001600160a01b03811661141e5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610504565b611427816114af565b50565b336114336108d2565b6001600160a01b0316146114595760405162461bcd60e51b815260040161050490611665565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b336114846108d2565b6001600160a01b0316146114aa5760405162461bcd60e51b815260040161050490611665565b600755565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6003546040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b03909116906323b872dd90606401611273565b8060065461154a91906117e6565b60065550565b80356001600160a01b038116811461156757600080fd5b919050565b60006020828403121561157e57600080fd5b61158782611550565b9392505050565b600080604083850312156115a157600080fd5b6115aa83611550565b946020939093013593505050565b6001600160a01b0391909116815260200190565b600080604083850312156115df57600080fd5b823591506115ef60208401611550565b90509250929050565b6000806000806080858703121561160e57600080fd5b61161785611550565b935061162560208601611550565b925061163360408601611550565b915061164160608601611550565b905092959194509250565b60006020828403121561165e57600080fd5b5035919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526010908201526f14185d5cd8589b194e881c185d5cd95960821b604082015260600190565b60208082526023908201527f506f6f6c3a204f7261636c652043616e6e6f74206265207a65726f206164647260408201526265737360e81b606082015260800190565b6020808252602d908201527f506f6f6c3a205374616b696e6720436f6e74726163742043616e6e6f7420626560408201526c207a65726f206164647265737360981b606082015260800190565b60006020828403121561176657600080fd5b815163ffffffff8116811461158757600080fd5b634e487b7160e01b600052601160045260246000fd5b63ffffffff8281168282160390808211156117ad576117ad61177a565b5092915050565b6001600160a01b03929092168252602082015260400190565b6000602082840312156117df57600080fd5b5051919050565b808201808211156117f9576117f961177a565b92915050565b60006020828403121561181157600080fd5b8151801515811461158757600080fd5b602080825260139082015272506f6f6c3a3a454d5054595f42414c414e434560681b604082015260600190565b602080825260129082015271506f6f6c3a3a5a45524f5f4144445245535360701b60408201526060019056fea264697066735822122059d449a3af5150e5a8238574c8c975197885834a221f28244226b10feb0312e164736f6c63430008100033";

type IDOPoolConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: IDOPoolConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class IDOPool__factory extends ContractFactory {
  constructor(...args: IDOPoolConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _token: PromiseOrValue<string>,
    _usdc: PromiseOrValue<string>,
    _nikaStaking: PromiseOrValue<string>,
    _oracle: PromiseOrValue<string>,
    _treasuryAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<IDOPool> {
    return super.deploy(
      _token,
      _usdc,
      _nikaStaking,
      _oracle,
      _treasuryAddress,
      overrides || {}
    ) as Promise<IDOPool>;
  }
  override getDeployTransaction(
    _token: PromiseOrValue<string>,
    _usdc: PromiseOrValue<string>,
    _nikaStaking: PromiseOrValue<string>,
    _oracle: PromiseOrValue<string>,
    _treasuryAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _token,
      _usdc,
      _nikaStaking,
      _oracle,
      _treasuryAddress,
      overrides || {}
    );
  }
  override attach(address: string): IDOPool {
    return super.attach(address) as IDOPool;
  }
  override connect(signer: Signer): IDOPool__factory {
    return super.connect(signer) as IDOPool__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): IDOPoolInterface {
    return new utils.Interface(_abi) as IDOPoolInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IDOPool {
    return new Contract(address, _abi, signerOrProvider) as IDOPool;
  }
}
