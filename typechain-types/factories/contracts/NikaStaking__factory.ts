/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  NikaStaking,
  NikaStakingInterface,
} from "../../contracts/NikaStaking";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_treasury",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "_rewardToken",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "claimer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "maxClaimAmount",
        type: "uint256",
      },
    ],
    name: "CantClaimReward",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "origin",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "level",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "invitationByLevel",
        type: "uint256",
      },
    ],
    name: "CommissionRewardReferrerByLevel",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "referrer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "claimer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "LinearRewardClaimed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "origin",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "level",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "LinearRewardReferrerByLevel",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "referral",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "level",
        type: "uint256",
      },
    ],
    name: "ReferralLevelAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    inputs: [],
    name: "Pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "TEN_MINUTES",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "UnPause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "admin",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baseInterestPerDay",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "commissionInterestLevels",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "cycleDuration",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "referrer",
        type: "address",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "getF1Invited",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "interestDistributeFrequency",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "interestIncreasePerCycle",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "isReferral",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxInterestPerDay",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minimumStakingAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "oracle",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
    ],
    name: "pendingReward",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "poolStatus",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "referralInvitationsByCommissionLevel",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "referralLevels",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "totalReferralInvitations",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalStaked",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "treasury",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_admin",
        type: "address",
      },
    ],
    name: "updateAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_treasury",
        type: "address",
      },
    ],
    name: "updateTreasury",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userStakingInfos",
    outputs: [
      {
        internalType: "uint256",
        name: "totalStakes",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalWithdrawed",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "commissionInterest",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "claimedStakingInterest",
        type: "uint256",
      },
      {
        internalType: "uint64",
        name: "stakingInterestRate",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "lastUpdatedTime",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "lastTimeDeposited",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "lastTimeClaimed",
        type: "uint64",
      },
      {
        internalType: "bool",
        name: "joinByReferral",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052600280546001600160b01b0319167405002800fa0000000000000e1000000000000151801790553480156200003857600080fd5b5060405162001af138038062001af18339810160408190526200005b9162000281565b6200006633620001b8565b6000805460ff60a01b19169055600180556001600160a01b038216620000b85760405162461bcd60e51b81526020600482015260026024820152615a4160f01b60448201526064015b60405180910390fd5b6001600160a01b038116620000f55760405162461bcd60e51b81526020600482015260026024820152615a4160f01b6044820152606401620000af565b600580546001600160a01b038085166001600160a01b03199283161790925560048054928416929091169190911790556006805460ff60a01b1933166001600160a81b031990911617600160a01b17905560408051610120810182526105dc81526103e860208201526101f4918101829052606081018290526080810191909152600060a0820181905260c0820181905260e08201819052610100820152620001a2906009908162000208565b505068056bc75e2d6310000060085550620002c0565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b82600981019282156200023f579160200282015b828111156200023f578251829061ffff169055916020019190600101906200021c565b506200024d92915062000251565b5090565b5b808211156200024d576000815560010162000252565b6001600160a01b03811681146200027e57600080fd5b50565b600080604083850312156200029557600080fd5b8251620002a28162000268565b6020840151909250620002b58162000268565b809150509250929050565b61182180620002d06000396000f3fe608060405234801561001057600080fd5b506004361061019a5760003560e01c8063817b1cd2116100e4578063ece375b311610092578063ece375b31461045f578063edd0877b14610488578063efa000e0146104b3578063f0228692146104cd578063f2fde38b146104e1578063f40f0f52146104f4578063f7c618c114610524578063f851a4401461053757600080fd5b8063817b1cd2146103df5780638da5cb5b146103e85780638fb33c3b146103f9578063a2c6a2a714610419578063a9a6efc61461042e578063b0d2d01114610443578063e2f273bd1461044c57600080fd5b806361af4af51161014c57806361af4af51461029557806361d027b3146102bd5780636985a022146102d05780636a4a27ec146102d85780636e553f651461039e578063715018a6146103b15780637dc0d1d0146103b95780637f51bb1f146103cc57600080fd5b8063160c018a1461019f5780631ff7edab146101c2578063438cd2d31461020157806344d25cb21461020b57806357259c7f1461022c5780635bec4cb4146102625780635c975abb1461028d575b600080fd5b6101a861025881565b60405163ffffffff90911681526020015b60405180910390f35b6101f16101d03660046114db565b6001600160a01b031660009081526015602052604090206005015460ff1690565b60405190151581526020016101b9565b61020961054a565b005b61021e6102193660046114fd565b61059a565b6040519081526020016101b9565b61025561023a3660046114db565b6013602052600090815260409020546001600160a01b031681565b6040516101b99190611516565b600254610275906001600160401b031681565b6040516001600160401b0390911681526020016101b9565b6101f16105b1565b6002546102aa90600160901b900461ffff1681565b60405161ffff90911681526020016101b9565b600554610255906001600160a01b031681565b6102096105c1565b61034a6102e63660046114db565b60156020526000908152604090208054600182015460028301546003840154600485015460059095015493949293919290916001600160401b0380831692600160401b8104821692600160801b8204831692600160c01b9092049091169060ff1689565b60408051998a5260208a01989098529688019590955260608701939093526001600160401b039182166080870152811660a086015290811660c08501521660e08301521515610100820152610120016101b9565b6102096103ac36600461152a565b610600565b610209610b27565b600354610255906001600160a01b031681565b6102096103da3660046114db565b610b5b565b61021e60075481565b6000546001600160a01b0316610255565b61021e6104073660046114db565b60126020526000908152604090205481565b6002546102aa90600160a01b900461ffff1681565b6002546102aa90600160801b900461ffff1681565b61021e60085481565b61020961045a3660046114db565b610ba7565b61021e61046d3660046114db565b6001600160a01b031660009081526012602052604090205490565b61021e610496366004611556565b601460209081526000928352604080842090915290825290205481565b60025461027590600160401b90046001600160401b031681565b6006546101f190600160a01b900460ff1681565b6102096104ef3660046114db565b610bf3565b6105076105023660046114db565b610c8e565b604080519283526001600160401b039091166020830152016101b9565b600454610255906001600160a01b031681565b600654610255906001600160a01b031681565b6006546001600160a01b0316331461057d5760405162461bcd60e51b815260040161057490611580565b60405180910390fd5b6006805460ff60a01b1916600160a01b179055610598610f70565b565b600981600981106105aa57600080fd5b0154905081565b600054600160a01b900460ff1690565b6006546001600160a01b031633146105eb5760405162461bcd60e51b815260040161057490611580565b6006805460ff60a01b19169055610598611002565b6106086105b1565b156106255760405162461bcd60e51b8152600401610574906115b7565b33826106735760405162461bcd60e51b815260206004820152601b60248201527f706f6f6c3a20616d6f756e742063616e6e6f74206265207a65726f00000000006044820152606401610574565b6001600160a01b0381166106dd5760405162461bcd60e51b815260206004820152602b60248201527f706f6f6c3a207374616b6520616464726573732063616e206e6f74206265207a60448201526a65726f206164647265737360a81b6064820152608401610574565b6106e681611062565b6001600160a01b0381166000908152601560205260408120906107098386611179565b9050600360009054906101000a90046001600160a01b03166001600160a01b031663b4d1d7956040518163ffffffff1660e01b8152600401602060405180830381865afa15801561075e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061078291906115e1565b600360009054906101000a90046001600160a01b03166001600160a01b031663e56522a96040518163ffffffff1660e01b8152600401602060405180830381865afa1580156107d5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107f991906115fa565b6108099063ffffffff1642611636565b111561087857600360009054906101000a90046001600160a01b03166001600160a01b031663a2e620456040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561085f57600080fd5b505af1158015610873573d6000803e3d6000fd5b505050505b60035460048054604051633ddac95360e01b81526001600160a01b0391821692810192909252602482018490526000921690633ddac95390604401602060405180830381865afa1580156108d0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108f491906115e1565b90506008548210156109595760405162461bcd60e51b815260206004820152602860248201527f706f6f6c3a206d696e696d756d207374616b696e6720616d6f756e74206e6f74604482015267081c995858da195960c21b6064820152608401610574565b8254600090610969908490611649565b90506001600160a01b03861615610a4057600584015460ff16156109dd5760405162461bcd60e51b815260206004820152602560248201527f706f6f6c3a207573657220616c7265616479206a6f696e656420627920726566604482015264195c9c985b60da1b6064820152608401610574565b60058401805460ff191660019081179091556001600160a01b0380871660009081526013602090815260408083208054948c166001600160a01b031990951685179055928252601290529081208054909190610a3a908490611649565b90915550505b60048401546001600160401b0316600003610a7e57600254600485018054600160901b90920461ffff1667ffffffffffffffff199092169190911790555b600484018054600160401b600160c01b031916600160401b426001600160401b031690810267ffffffffffffffff60801b191691909117600160801b9190910217905580845560078054849190600090610ad9908490611649565b90915550506040518381526001600160a01b0387169033907f5548c837ab068cf56a2c2479df0882a4922fd203edb7517321831d95078c5f629060200160405180910390a350505050505050565b6000546001600160a01b03163314610b515760405162461bcd60e51b81526004016105749061165c565b61059860006112ee565b6006546001600160a01b03163314610b855760405162461bcd60e51b815260040161057490611580565b600580546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b03163314610bd15760405162461bcd60e51b81526004016105749061165c565b600680546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b03163314610c1d5760405162461bcd60e51b81526004016105749061165c565b6001600160a01b038116610c825760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610574565b610c8b816112ee565b50565b6001600160a01b038116600090815260156020526040812060048101548291906001600160401b03600160c01b9091048116429091161080610cdb575060048101546001600160401b0316155b15610cec5750600093849350915050565b60048101546002546001600160401b0380831692600092821691610d1891600160c01b90041642611691565b610d2291906116ce565b610d2d9060016116f4565b60025490915060009061ffff600160a01b8204811691610d56918691600160801b900416611691565b610d6091906116ce565b90506000816001600160401b0316600003610df757670de0b6b3a76400006002610d8b8560016116f4565b610d959086611714565b610d9f91906116ce565b6001600160401b0316846001600160401b0316866001600160401b03168860000154610dcb9190611743565b610dd59190611743565b610ddf9190611743565b610de99190611762565b989397509295505050505050565b6001600160401b03821615610e9e57816001600160401b0316836001600160401b03161115610e9e576000610e2c8385611691565b6001600160401b03169050670de0b6b3a76400006002610e4d836001611649565b610e579084611743565b610e619190611762565b87548390610e79906001600160401b038a1690611743565b610e839190611743565b610e8d9190611743565b610e979190611762565b9150829350505b670de0b6b3a76400006002610eb48560016116f4565b610ebe9086611714565b610ec891906116ce565b6001600160401b0316600260149054906101000a900461ffff1661ffff16856001600160401b0316876001600160401b03168960000154610f099190611743565b610f139190611743565b610f1d9190611743565b610f279190611743565b610f319190611762565b610f3b9082611649565b6002549091508190610f5890600160a01b900461ffff1685611714565b610f6290866116f4565b965096505050505050915091565b610f786105b1565b610fbb5760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606401610574565b6000805460ff60a01b191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b604051610ff89190611516565b60405180910390a1565b61100a6105b1565b156110275760405162461bcd60e51b8152600401610574906115b7565b6000805460ff60a01b1916600160a01b1790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610feb3390565b6001600160a01b0381166000908152601560205260408120908061108584610c8e565b909250905081156111505761109a828561133e565b600480546005546040516323b872dd60e01b81526001600160a01b03928316936323b872dd936110d09316918991889101611776565b6020604051808303816000875af11580156110ef573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611113919061179a565b50818360030160008282546111289190611649565b90915550506004830180546001600160c01b0316600160c01b426001600160401b0316021790555b600492909201805467ffffffffffffffff19166001600160401b03909316929092179091555050565b600480546040516370a0823160e01b815260009283926001600160a01b0316916370a08231916111ab91309101611516565b602060405180830381865afa1580156111c8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111ec91906115e1565b600480546040516323b872dd60e01b81529293506001600160a01b0316916323b872dd916112209188913091899101611776565b6020604051808303816000875af115801561123f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611263919061179a565b50600480546040516370a0823160e01b81526000926001600160a01b03909216916370a082319161129691309101611516565b602060405180830381865afa1580156112b3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112d791906115e1565b90506112e38282611636565b925050505b92915050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001815b600982116114b9576001600160a01b038082166000908152601360209081526040808320549093168083526015909152919020816113815750506114b9565b60006127106009611393600188611636565b600981106113a3576113a36117bc565b01546113af9089611743565b6113b99190611762565b90508082600201546113cb9190611649565b6002830155600480546005546040516323b872dd60e01b81526001600160a01b03928316936323b872dd936114069316918891879101611776565b6020604051808303816000875af1158015611425573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611449919061179a565b50826001600160a01b0316866001600160a01b03167f3e88b297c4a27c49cf6d07cc4b477e24409329c51de4722e0dcb7bc0b633141b8784604051611498929190918252602082015260400190565b60405180910390a382935084806114ae906117d2565b955050505050611342565b50505050565b80356001600160a01b03811681146114d657600080fd5b919050565b6000602082840312156114ed57600080fd5b6114f6826114bf565b9392505050565b60006020828403121561150f57600080fd5b5035919050565b6001600160a01b0391909116815260200190565b6000806040838503121561153d57600080fd5b8235915061154d602084016114bf565b90509250929050565b6000806040838503121561156957600080fd5b611572836114bf565b946020939093013593505050565b6020808252601d908201527f5065726d697373696f6e3a2055736572206973206e6f742061646d696e000000604082015260600190565b60208082526010908201526f14185d5cd8589b194e881c185d5cd95960821b604082015260600190565b6000602082840312156115f357600080fd5b5051919050565b60006020828403121561160c57600080fd5b815163ffffffff811681146114f657600080fd5b634e487b7160e01b600052601160045260246000fd5b818103818111156112e8576112e8611620565b808201808211156112e8576112e8611620565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6001600160401b038281168282160390808211156116b1576116b1611620565b5092915050565b634e487b7160e01b600052601260045260246000fd5b60006001600160401b03808416806116e8576116e86116b8565b92169190910492915050565b6001600160401b038181168382160190808211156116b1576116b1611620565b60006001600160401b038083168185168183048111821515161561173a5761173a611620565b02949350505050565b600081600019048311821515161561175d5761175d611620565b500290565b600082611771576117716116b8565b500490565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6000602082840312156117ac57600080fd5b815180151581146114f657600080fd5b634e487b7160e01b600052603260045260246000fd5b6000600182016117e4576117e4611620565b506001019056fea2646970667358221220dd99224873251977bdc5e86feeb049d29fdf3f3613796ce5cf7d2695973a015f64736f6c63430008100033";

type NikaStakingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NikaStakingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class NikaStaking__factory extends ContractFactory {
  constructor(...args: NikaStakingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _treasury: PromiseOrValue<string>,
    _rewardToken: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<NikaStaking> {
    return super.deploy(
      _treasury,
      _rewardToken,
      overrides || {}
    ) as Promise<NikaStaking>;
  }
  override getDeployTransaction(
    _treasury: PromiseOrValue<string>,
    _rewardToken: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_treasury, _rewardToken, overrides || {});
  }
  override attach(address: string): NikaStaking {
    return super.attach(address) as NikaStaking;
  }
  override connect(signer: Signer): NikaStaking__factory {
    return super.connect(signer) as NikaStaking__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NikaStakingInterface {
    return new utils.Interface(_abi) as NikaStakingInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): NikaStaking {
    return new Contract(address, _abi, signerOrProvider) as NikaStaking;
  }
}
