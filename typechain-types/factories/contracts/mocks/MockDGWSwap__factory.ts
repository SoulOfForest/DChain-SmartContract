/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  MockDGWSwap,
  MockDGWSwapInterface,
} from "../../../contracts/mocks/MockDGWSwap";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "previousAdminRole",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "newAdminRole",
        type: "bytes32",
      },
    ],
    name: "RoleAdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleGranted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleRevoked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [],
    name: "DEFAULT_ADMIN_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DWStaking",
    outputs: [
      {
        internalType: "contract IDChainStaking",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "OWNER_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PAUSER_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SUB_ADMIN_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "__DChainBase_init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
    ],
    name: "getRoleAdmin",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "grantRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "hasRole",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "contract IDChainStaking",
        name: "_dwStaking",
        type: "address",
      },
      {
        internalType: "contract IERC20WithBurn",
        name: "_rewardToken",
        type: "address",
      },
      {
        internalType: "contract IERC20WithBurn",
        name: "_usdt",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "isAdmin",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "renounceRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "revokeRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardToken",
    outputs: [
      {
        internalType: "contract IERC20WithBurn",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IDChainStaking",
        name: "_DWStaking",
        type: "address",
      },
    ],
    name: "setDWStaking",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20WithBurn",
        name: "_rewardToken",
        type: "address",
      },
    ],
    name: "setRewardToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20WithBurn",
        name: "_usdt",
        type: "address",
      },
    ],
    name: "setUSDT",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[2]",
        name: "_path",
        type: "address[2]",
      },
      {
        internalType: "enum MockDGWSwap.SwapType",
        name: "_type",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "swap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "usdt",
    outputs: [
      {
        internalType: "contract IERC20WithBurn",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "withdrawTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50611a45806100206000396000f3fe608060405234801561001057600080fd5b50600436106101585760003560e01c80638456cb59116100c3578063b6db75a01161007c578063b6db75a0146102d0578063d547741f146102d8578063e58378bb146102eb578063e63ab1e914610300578063f7c618c114610315578063f8c8765e1461032957600080fd5b80638456cb59146102745780638aee81271461027c5780638dbe2d6c1461028f57806391d14854146102a2578063a217fddf146102b5578063a522ad25146102bd57600080fd5b806336568abe1161011557806336568abe146102145780633f4ba83a1461022757806350c1b9231461022f5780635c975abb1461024257806362d6306f1461024d5780636a736cea1461026057600080fd5b806301ffc9a71461015d578063022f23541461018557806315f40fb1146101a8578063248a9ca3146101bd5780632f2ff15d146101e05780632f48ab7d146101f3575b600080fd5b61017061016b366004611717565b61033c565b60405190151581526020015b60405180910390f35b61019a6000805160206119f083398151915281565b60405190815260200161017c565b6101bb6101b6366004611566565b610373565b005b61019a6101cb3660046116db565b60009081526065602052604090206001015490565b6101bb6101ee3660046116f3565b6103c3565b6101c554610207906001600160a01b031681565b60405161017c91906117e2565b6101bb6102223660046116f3565b6103ed565b6101bb61046b565b6101bb61023d366004611566565b61048e565b60975460ff16610170565b6101bb61025b366004611566565b6104d5565b6101c354610207906001600160a01b031681565b6101bb6105fe565b6101bb61028a366004611566565b61061e565b6101bb61029d366004611615565b610665565b6101706102b03660046116f3565b6109fe565b61019a600081565b6101bb6102cb366004611582565b610a29565b610170610ade565b6101bb6102e63660046116f3565b610afd565b61019a6000805160206119b083398151915281565b61019a6000805160206119d083398151915281565b6101c454610207906001600160a01b031681565b6101bb6103373660046115ba565b610b22565b60006001600160e01b03198216637965db0b60e01b148061036d57506301ffc9a760e01b6001600160e01b03198316145b92915050565b61037b610ade565b6103a05760405162461bcd60e51b8152600401610397906118a9565b60405180910390fd5b6101c380546001600160a01b0319166001600160a01b0392909216919091179055565b6000828152606560205260409020600101546103de81610cc4565b6103e88383610cce565b505050565b6001600160a01b038116331461045d5760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b6064820152608401610397565b6104678282610d54565b5050565b6000805160206119f083398151915261048381610cc4565b61048b610dbb565b50565b610496610ade565b6104b25760405162461bcd60e51b8152600401610397906118a9565b6101c580546001600160a01b0319166001600160a01b0392909216919091179055565b600054610100900460ff166104fc5760405162461bcd60e51b81526004016103979061185e565b6001600160a01b0381166105525760405162461bcd60e51b815260206004820181905260248201527f4f776e65722063616e6e6f7420626520746865207a65726f20616464726573736044820152606401610397565b61055a610e07565b610562610e30565b61056a610e5f565b6105826000805160206119b083398151915282610e8e565b61059a6000805160206119d083398151915282610e8e565b6105c06000805160206119f08339815191526000805160206119b0833981519152610e98565b6105e66000805160206119d08339815191526000805160206119b0833981519152610e98565b61048b6000805160206119b083398151915280610e98565b6000805160206119f083398151915261061681610cc4565b61048b610ee3565b610626610ade565b6106425760405162461bcd60e51b8152600401610397906118a9565b6101c480546001600160a01b0319166001600160a01b0392909216919091179055565b61066d610f20565b6101c454835160009182916001600160a01b03908116911614156106f7576101c5546001600160a01b03168560015b60200201516001600160a01b0316146106f25760405162461bcd60e51b8152602060048201526018602482015277151bdad95b881bdd5d1c1d5d081b9bdd081b585d18da195960421b6044820152606401610397565b610725565b6101c55485516001600160a01b0390811691161415610158576101c4546001600160a01b031685600161069c565b600084600181111561074757634e487b7160e01b600052602160045260246000fd5b141561082c576101c45485518493506001600160a01b03908116911614156107fa576101c3546101c4546040516320e485d760e11b81526001600160a01b03928316926341c90bae926107a19291169087906004016117f6565b602060405180830381600087803b1580156107bb57600080fd5b505af11580156107cf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107f3919061173f565b905061095b565b6101c35460405163688cd84560e01b8152600481018590526001600160a01b039091169063688cd845906024016107a1565b506101c454845183916001600160a01b03918216911614156108ce576101c35460405163688cd84560e01b8152600481018590526001600160a01b039091169063688cd84590602401602060405180830381600087803b15801561088f57600080fd5b505af11580156108a3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108c7919061173f565b915061095b565b6101c3546101c4546040516320e485d760e11b81526001600160a01b03928316926341c90bae926109069291169087906004016117f6565b602060405180830381600087803b15801561092057600080fd5b505af1158015610934573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610958919061173f565b91505b6109723386516001600160a01b0316903085610f66565b60208501516001600160a01b031663a9059cbb33836040518363ffffffff1660e01b81526004016109a49291906117f6565b602060405180830381600087803b1580156109be57600080fd5b505af11580156109d2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109f691906116bb565b505050505050565b60009182526065602090815260408084206001600160a01b0393909316845291905290205460ff1690565b610a31610ade565b610a4d5760405162461bcd60e51b8152600401610397906118a9565b61046781836001600160a01b03166370a08231306040518263ffffffff1660e01b8152600401610a7d91906117e2565b60206040518083038186803b158015610a9557600080fd5b505afa158015610aa9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610acd919061173f565b6001600160a01b0385169190610fd7565b6000610af86000805160206119b0833981519152336109fe565b905090565b600082815260656020526040902060010154610b1881610cc4565b6103e88383610d54565b600054610100900460ff1615808015610b425750600054600160ff909116105b80610b5c5750303b158015610b5c575060005460ff166001145b610bbf5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610397565b6000805460ff191660011790558015610be2576000805461ff0019166101001790555b610beb856104d5565b6001600160a01b038316610c115760405162461bcd60e51b815260040161039790611842565b6001600160a01b038416610c375760405162461bcd60e51b815260040161039790611842565b6101c480546001600160a01b038086166001600160a01b0319928316179092556101c580548584169083161790556101c38054928716929091169190911790558015610cbd576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050505050565b61048b8133610ff6565b610cd882826109fe565b6104675760008281526065602090815260408083206001600160a01b03851684529091529020805460ff19166001179055610d103390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b610d5e82826109fe565b156104675760008281526065602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b610dc361104f565b6097805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b604051610dfd91906117e2565b60405180910390a1565b600054610100900460ff16610e2e5760405162461bcd60e51b81526004016103979061185e565b565b600054610100900460ff16610e575760405162461bcd60e51b81526004016103979061185e565b610e2e611098565b600054610100900460ff16610e865760405162461bcd60e51b81526004016103979061185e565b610e2e6110cb565b6104678282610cce565b600082815260656020526040808220600101805490849055905190918391839186917fbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff9190a4505050565b610eeb610f20565b6097805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610df03390565b60975460ff1615610e2e5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610397565b6040516001600160a01b0380851660248301528316604482015260648101829052610fd19085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526110f9565b50505050565b6103e88363a9059cbb60e01b8484604051602401610f9a9291906117f6565b61100082826109fe565b6104675761100d816111cb565b6110188360206111dd565b604051602001611029929190611773565b60408051601f198184030181529082905262461bcd60e51b82526103979160040161180f565b60975460ff16610e2e5760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606401610397565b600054610100900460ff166110bf5760405162461bcd60e51b81526004016103979061185e565b6097805460ff19169055565b600054610100900460ff166110f25760405162461bcd60e51b81526004016103979061185e565b600160c955565b600061114e826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166113c69092919063ffffffff16565b8051909150156103e8578080602001905181019061116c91906116bb565b6103e85760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610397565b606061036d6001600160a01b03831660145b606060006111ec83600261190c565b6111f79060026118f4565b67ffffffffffffffff81111561121d57634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015611247576020820181803683370190505b509050600360fc1b8160008151811061127057634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a905350600f60fb1b816001815181106112ad57634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a90535060006112d184600261190c565b6112dc9060016118f4565b90505b6001811115611370576f181899199a1a9b1b9c1cb0b131b232b360811b85600f166010811061131e57634e487b7160e01b600052603260045260246000fd5b1a60f81b82828151811061134257634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a90535060049490941c9361136981611957565b90506112df565b5083156113bf5760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610397565b9392505050565b60606113d584846000856113dd565b949350505050565b60608247101561143e5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610397565b6001600160a01b0385163b6114955760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610397565b600080866001600160a01b031685876040516114b19190611757565b60006040518083038185875af1925050503d80600081146114ee576040519150601f19603f3d011682016040523d82523d6000602084013e6114f3565b606091505b509150915061150382828661150e565b979650505050505050565b6060831561151d5750816113bf565b82511561152d5782518084602001fd5b8160405162461bcd60e51b8152600401610397919061180f565b80356115528161199a565b919050565b80356002811061155257600080fd5b600060208284031215611577578081fd5b81356113bf8161199a565b60008060408385031215611594578081fd5b823561159f8161199a565b915060208301356115af8161199a565b809150509250929050565b600080600080608085870312156115cf578182fd5b84356115da8161199a565b935060208501356115ea8161199a565b925060408501356115fa8161199a565b9150606085013561160a8161199a565b939692955090935050565b600080600060808486031215611629578283fd5b84601f850112611637578283fd5b6040516040810181811067ffffffffffffffff8211171561165a5761165a611984565b806040525080856040870188811115611671578687fd5b865b600281101561169a5761168583611547565b84526020938401939290920191600101611673565b508396506116a781611557565b955050505050606084013590509250925092565b6000602082840312156116cc578081fd5b815180151581146113bf578182fd5b6000602082840312156116ec578081fd5b5035919050565b60008060408385031215611705578182fd5b8235915060208301356115af8161199a565b600060208284031215611728578081fd5b81356001600160e01b0319811681146113bf578182fd5b600060208284031215611750578081fd5b5051919050565b6000825161176981846020870161192b565b9190910192915050565b76020b1b1b2b9b9a1b7b73a3937b61d1030b1b1b7bab73a1604d1b8152600083516117a581601785016020880161192b565b7001034b99036b4b9b9b4b733903937b6329607d1b60179184019182015283516117d681602884016020880161192b565b01602801949350505050565b6001600160a01b0391909116815260200190565b6001600160a01b03929092168252602082015260400190565b602081526000825180602084015261182e81604085016020870161192b565b601f01601f19169190910160400192915050565b6020808252600290820152615a4160f01b604082015260600190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b6020808252602b908201527f4d75737420686176652061646d696e20726f6c6520746f20706572666f726d2060408201526a3a3434b99030b1ba34b7b760a91b606082015260800190565b600082198211156119075761190761196e565b500190565b60008160001904831182151516156119265761192661196e565b500290565b60005b8381101561194657818101518382015260200161192e565b83811115610fd15750506000910152565b6000816119665761196661196e565b506000190190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461048b57600080fdfeb19546dff01e856fb3f010c267a7b1c60363cf8a4664e21cc89c26224620214e65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862ad2e4c2619ea6e0faebc405d89445161c041e30fe03373ea0473da142d57d4514a2646970667358221220e3729b520fecfa74beb8c2e7c846a4b09109b938bb19ed819236fdefcf1862fb64736f6c63430008040033";

type MockDGWSwapConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockDGWSwapConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockDGWSwap__factory extends ContractFactory {
  constructor(...args: MockDGWSwapConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MockDGWSwap> {
    return super.deploy(overrides || {}) as Promise<MockDGWSwap>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): MockDGWSwap {
    return super.attach(address) as MockDGWSwap;
  }
  override connect(signer: Signer): MockDGWSwap__factory {
    return super.connect(signer) as MockDGWSwap__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockDGWSwapInterface {
    return new utils.Interface(_abi) as MockDGWSwapInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockDGWSwap {
    return new Contract(address, _abi, signerOrProvider) as MockDGWSwap;
  }
}
