/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  UcuProxy,
  UcuProxyInterface,
} from "../../../contracts/proxy/UcuProxy";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract ImplementationRepository",
        name: "_repository",
        type: "address",
      },
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "getRepository",
    outputs: [
      {
        internalType: "contract ImplementationRepository",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "upgradeImplementation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162000b0438038062000b0483398101604081905262000034916200037b565b6001600160a01b0381166200007c5760405162461bcd60e51b81526020600482015260096024820152683130b21037bbb732b960b91b60448201526064015b60405180910390fd5b620000878162000128565b62000092826200019a565b62000120826001600160a01b031663d8bd5c296040518163ffffffff1660e01b815260040160206040518083038186803b158015620000d057600080fd5b505afa158015620000e5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200010b919062000355565b6040805160208101909152600081526200020c565b50506200040e565b60006200014260008051602062000ae48339815191525490565b90508160008051602062000ae483398151915255816001600160a01b0316816001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b620001b0816200025060201b620001b41760201c565b620001e95760405162461bcd60e51b8152602060048201526008602482015267626164207265706f60c01b604482015260640162000073565b7e7037545499569801a5c0bd8dbf5fccb13988c7610367d129f45ee69b1624f855565b6200021882826200025f565b6040516001600160a01b038316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a25050565b6001600160a01b03163b151590565b62000275826200025060201b620001b41760201c565b620002b05760405162461bcd60e51b815260206004820152600a6024820152696e6f207570677261646560b01b604482015260640162000073565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc82905580511562000351576000826001600160a01b031682604051620002f89190620003b9565b600060405180830381855af49150503d806000811462000335576040519150601f19603f3d011682016040523d82523d6000602084013e6200033a565b606091505b50509050806200034f573d806000803e806000fd5b505b5050565b60006020828403121562000367578081fd5b81516200037481620003f5565b9392505050565b600080604083850312156200038e578081fd5b82516200039b81620003f5565b6020840151909250620003ae81620003f5565b809150509250929050565b60008251815b81811015620003db5760208186018101518583015201620003bf565b81811115620003ea5782828501525b509190910192915050565b6001600160a01b03811681146200040b57600080fd5b50565b6106c6806200041e6000396000f3fe6080604052600436106100435760003560e01c8063466f3dc31461005a5780637f44897b1461006f5780638da5cb5b1461009a578063f2fde38b146100af57610052565b36610052576100506100cf565b005b6100506100cf565b34801561006657600080fd5b506100506100ef565b34801561007b57600080fd5b50610084610138565b60405161009191906105e5565b60405180910390f35b3480156100a657600080fd5b50610084610166565b3480156100bb57600080fd5b506100506100ca3660046104e1565b610170565b6100ed6100e86000805160206106718339815191525490565b6101c3565b565b6100f76101ec565b6001600160a01b0316336001600160a01b0316146101305760405162461bcd60e51b8152600401610127906105f9565b60405180910390fd5b6100ed610211565b60006101617e7037545499569801a5c0bd8dbf5fccb13988c7610367d129f45ee69b1624f85490565b905090565b60006101616101ec565b6101786101ec565b6001600160a01b0316336001600160a01b0316146101a85760405162461bcd60e51b8152600401610127906105f9565b6101b18161035f565b50565b6001600160a01b03163b151590565b3660008037600080366000845af43d6000803e8080156101e2573d6000f35b3d6000fd5b505050565b7fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035490565b600061023a7e7037545499569801a5c0bd8dbf5fccb13988c7610367d129f45ee69b1624f85490565b90506000816001600160a01b0316636a3def6c6102636000805160206106718339815191525490565b6040518263ffffffff1660e01b815260040161027f91906105e5565b60206040518083038186803b15801561029757600080fd5b505afa1580156102ab573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102cf9190610504565b90506000826001600160a01b0316638e12f761836040518263ffffffff1660e01b81526004016102ff91906105e5565b60006040518083038186803b15801561031757600080fd5b505afa15801561032b573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526103539190810190610520565b90506101e782826103d2565b60006103696101ec565b9050817fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d610355816001600160a01b0316816001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6103dc8282610414565b6040516001600160a01b038316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a25050565b61041d826101b4565b6104565760405162461bcd60e51b815260206004820152600a6024820152696e6f207570677261646560b01b6044820152606401610127565b6000805160206106718339815191528290558051156104dd576000826001600160a01b03168260405161048991906105c9565b600060405180830381855af49150503d80600081146104c4576040519150601f19603f3d011682016040523d82523d6000602084013e6104c9565b606091505b50509050806101e7573d806000803e806000fd5b5050565b6000602082840312156104f2578081fd5b81356104fd8161065b565b9392505050565b600060208284031215610515578081fd5b81516104fd8161065b565b600060208284031215610531578081fd5b815167ffffffffffffffff80821115610548578283fd5b818401915084601f83011261055b578283fd5b81518181111561056d5761056d610645565b604051601f8201601f19908116603f0116810190838211818310171561059557610595610645565b816040528281528760208487010111156105ad578586fd5b6105be836020830160208801610615565b979650505050505050565b600082516105db818460208701610615565b9190910192915050565b6001600160a01b0391909116815260200190565b6020808252600290820152614e4160f01b604082015260600190565b60005b83811015610630578181015183820152602001610618565b8381111561063f576000848401525b50505050565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b03811681146101b157600080fdfe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbca2646970667358221220afa4752aa89bd4c91b8bee2ae108dc3478308737d2b0095c4497eac00836af2a64736f6c63430008040033b53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103";

type UcuProxyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: UcuProxyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class UcuProxy__factory extends ContractFactory {
  constructor(...args: UcuProxyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _repository: PromiseOrValue<string>,
    _owner: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<UcuProxy> {
    return super.deploy(
      _repository,
      _owner,
      overrides || {}
    ) as Promise<UcuProxy>;
  }
  override getDeployTransaction(
    _repository: PromiseOrValue<string>,
    _owner: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_repository, _owner, overrides || {});
  }
  override attach(address: string): UcuProxy {
    return super.attach(address) as UcuProxy;
  }
  override connect(signer: Signer): UcuProxy__factory {
    return super.connect(signer) as UcuProxy__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UcuProxyInterface {
    return new utils.Interface(_abi) as UcuProxyInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): UcuProxy {
    return new Contract(address, _abi, signerOrProvider) as UcuProxy;
  }
}
